/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 128);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/metronic/js/pages/custom/users/outils.users.js":
/*!******************************************************************!*\
  !*** ./resources/metronic/js/pages/custom/users/outils.users.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Class Definition\nvar KTform = function () {\n  var _buttonSpinnerClasses = 'spinner spinner-right spinner-white pr-15';\n\n  var _handleFormUser = function _handleFormUser() {\n    if ($('#kt_apps_user_edit_user_form').length) {\n      var form = KTUtil.getById('kt_apps_user_edit_user_form');\n    } else {\n      var form = KTUtil.getById('kt_apps_user_create_user_form');\n    }\n\n    var formSubmitUrl = KTUtil.attr(form, 'action');\n    var formSubmitButton = $('.kt_form_submit_utilisateurs');\n\n    if (!form) {\n      return;\n    }\n\n    var passwordMeter = document.getElementById('passwordMeter');\n\n    var randomNumber = function randomNumber(min, max) {\n      return Math.floor(Math.random() * (max - min + 1) + min);\n    };\n\n    FormValidation.formValidation(form, {\n      fields: {\n        company_id: {\n          validators: {\n            notEmpty: {\n              message: _LANG_.champs_is_required\n            }\n          }\n        },\n        username: {\n          validators: {\n            notEmpty: {\n              message: _LANG_.champs_is_required\n            }\n          }\n        },\n        firstname: {\n          validators: {\n            notEmpty: {\n              message: _LANG_.champs_is_required\n            }\n          }\n        },\n        lastname: {\n          validators: {\n            notEmpty: {\n              message: _LANG_.champs_is_required\n            }\n          }\n        },\n        email: {\n          validators: {\n            notEmpty: {\n              message: _LANG_.email_is_required\n            },\n            emailAddress: {\n              message: _LANG_.the_value_is_not_address_valid\n            }\n          }\n        },\n        password: {\n          validators: {\n            different: {\n              message: _LANG_.password_cannot_be_the_same_as_username,\n              compare: function compare() {\n                return form.querySelector('[name=\"username\"]').value;\n              }\n            }\n          }\n        },\n        pass_confirm: {\n          validators: {\n            identical: {\n              compare: function compare() {\n                return form.querySelector('[name=\"password\"]').value;\n              },\n              message: _LANG_.password_not_ecal_pass_confirm\n            }\n          }\n        }\n      },\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        bootstrap: new FormValidation.plugins.Bootstrap(),\n        submitButton: new FormValidation.plugins.SubmitButton(),\n        passwordStrength: new FormValidation.plugins.PasswordStrength({\n          field: 'password',\n          message: _LANG_.the_password_is_weak,\n          minimalScore: 3,\n          onValidated: function onValidated(valid, message, score) {\n            switch (score) {\n              case 0:\n                passwordMeter.style.width = randomNumber(1, 20) + '%';\n                passwordMeter.style.backgroundColor = '#ff4136';\n                break;\n\n              case 1:\n                passwordMeter.style.width = randomNumber(20, 40) + '%';\n                passwordMeter.style.backgroundColor = '#ff4136';\n                break;\n\n              case 2:\n                passwordMeter.style.width = randomNumber(40, 60) + '%';\n                passwordMeter.style.backgroundColor = '#ff4136';\n                break;\n\n              case 3:\n                passwordMeter.style.width = randomNumber(60, 80) + '%';\n                passwordMeter.style.backgroundColor = '#ffb700';\n                break;\n\n              case 4:\n                passwordMeter.style.width = '100%';\n                passwordMeter.style.backgroundColor = '#19a974';\n                break;\n\n              default:\n                break;\n            }\n          }\n        })\n      }\n    }).on('core.form.valid', function () {\n      $(form).submit();\n    }).on('core.form.invalid', function (response) {\n      if (response.error == true) {\n        $(form).before(response.message);\n      }\n    });\n  }; // Public Functions\n\n\n  return {\n    init: function init() {\n      _handleFormUser(); //_handleFormSignup();\n\n    }\n  };\n}(); // Class Initialization\n\n\njQuery(document).ready(function () {\n  KTform.init();\n});\n$(document).on(\"click\", '.generer_mot_passe', function (e) {\n  $.post(baseController + \"/getPassword\", _defineProperty({}, crsftoken, $('meta[name=\"X-CSRF-TOKEN\"]').attr('content')), function (response, status) {\n    //csrf_hash = response.csrf_token;\n    if (response.error == false) {\n      $('.pass_confirm').val('');\n      $('.datapassword').val('');\n      $('#password').html('');\n      $('.datapassword').val(response.success.password);\n      $('.pass_confirm').val(response.success.password);\n      $('#password').html(response.success.password);\n    }\n  });\n});\n\nfunction createUsername() {\n  var fname = $('#kt_apps_user_create_user_form input[name=firstname]').val().substring(0, 1).toLowerCase();\n  var lname = $('#kt_apps_user_create_user_form input[name=lastname]').val().toLowerCase();\n  var username = fname + lname + Math.floor(Math.random() * (10000 + 1) + 1000);\n  $('#kt_apps_user_create_user_form input[name=username]').val(username);\n}\n\n$('#kt_apps_user_create_user_form input[name=firstname]').on('keyup', createUsername);\n$('#kt_apps_user_create_user_form input[name=lastname]').on('keyup', createUsername);\n$('.show-password').click(function () {\n  if ($(this).prev('input').prop('type') == 'password') {\n    //Si c'est un input type password\n    $(this).prev('input').prop('type', 'text');\n    $(this).html('<i class=\"far fa-eye-slash\"></i>');\n  } else {\n    //Sinon\n    $(this).prev('input').prop('type', 'password');\n    $(this).html('<i class=\"far fa-eye\"></i>');\n  }\n});\n$(document).on(\"click\", '.deleteSession', function (e) {\n  var _$$post2;\n\n  var session_en_cours = $(this).data('session_en_cours');\n  var id = $(this).attr('id');\n  $.post(baseController + \"/deleteSession\", (_$$post2 = {}, _defineProperty(_$$post2, crsftoken, $('meta[name=\"X-CSRF-TOKEN\"]').attr('content')), _defineProperty(_$$post2, \"value\", session_en_cours), _$$post2), function (response, status) {\n    csrf_hash = response.csrf_token;\n    $(\"#\" + id).css('display', 'none'); // console.log(id);\n\n    if (status == 'success') {\n      $.notify({\n        title: _LANG_.deleted + \"!\",\n        message: response.message\n      }, {\n        type: response.type,\n        placement: {\n          from: 'bottom',\n          align: 'center'\n        }\n      });\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/metronic/js/pages/custom/users/outils.users.js\n");

/***/ }),

/***/ 128:
/*!************************************************************************!*\
  !*** multi ./resources/metronic/js/pages/custom/users/outils.users.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /Applications/MAMP/htdocs/spreadci4/public/admin/themes/metronic/resources/metronic/js/pages/custom/users/outils.users.js */"./resources/metronic/js/pages/custom/users/outils.users.js");


/***/ })

/******/ });