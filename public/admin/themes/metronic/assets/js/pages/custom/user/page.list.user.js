/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 118);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/metronic/js/pages/custom/user/page.list.user.js":
/*!*******************************************************************!*\
  !*** ./resources/metronic/js/pages/custom/user/page.list.user.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar KTAppUserListDatatable = function () {\n  var t;\n  return {\n    init: function init() {\n      t = $(\"#kt_apps_user_list_datatable\").KTDatatable({\n        data: {\n          type: \"remote\",\n          source: {\n            read: {\n              url: basePath + segementAdmin + \"/sp-admin-ajax\",\n              params: {\n                ajax: true,\n                controller: 'AdminUserController',\n                action: 'list',\n                value: '',\n                module: false,\n                company_id: company_id\n              }\n            }\n          },\n          pageSize: 10,\n          serverPaging: !0,\n          serverFiltering: !0,\n          serverSorting: !0\n        },\n        translate: {\n          records: {\n            processing: _LANG_.loading_wait,\n            noRecords: _LANG_.no_record_found\n          },\n          toolbar: {\n            pagination: {\n              items: {\n                \"default\": {\n                  first: _LANG_.first,\n                  prev: _LANG_.previous,\n                  next: _LANG_.next,\n                  last: _LANG_.last,\n                  more: _LANG_.more_pages,\n                  input: _LANG_.page_number,\n                  select: _LANG_.select_page_size,\n                  all: _LANG_.all\n                },\n                info: _LANG_.showing + ' {{start}} - {{end}} of {{total}}'\n              }\n            }\n          }\n        },\n        layout: {\n          scroll: !1,\n          footer: !1\n        },\n        sortable: !0,\n        pagination: !0,\n        search: {\n          input: $(\"#kt_subheader_search_form\"),\n          delay: 400\n        },\n        rows: {\n          beforeTemplate: function beforeTemplate(row, data, index) {\n            if (data.active == '0') {\n              row.addClass('notactive');\n            }\n          }\n        },\n        columns: [{\n          field: \"uuid\",\n          title: \"#\",\n          sortable: !1,\n          width: 20,\n          selector: {\n            \"class\": \"checkbox-solid\"\n          },\n          textAlign: \"center\"\n        }, {\n          field: \"username\",\n          title: _LANG_.prenom_nom_client,\n          width: 200,\n          template: function template(t, e) {\n            for (var a = 4 + e; a > 12;) {\n              a -= 3;\n            }\n\n            var n = \"100_\" + a + \".jpg\",\n                s = KTUtil.getRandomInt(0, 5),\n                l = [\"Developer\", \"Designer\", \"CEO\", \"Manager\", \"Architect\", \"Sales\"]; //u = [\"success\", \"brand\", \"danger\", \"success\", \"warning\", \"primary\", \"info\"];\n\n            var e = {\n              1: {\n                \"class\": \"success\"\n              },\n              2: {\n                \"class\": \"brand\"\n              },\n              3: {\n                \"class\": \"danger\"\n              },\n              4: {\n                \"class\": \"warning\"\n              },\n              5: {\n                \"class\": \"primary\"\n              },\n              6: {\n                \"class\": \"info\"\n              }\n            }; //return '<div class=\"user-card-v2\">\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"user-card-v2__pic\">\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"badge badge--xl badge--' + [\"success\", \"brand\", \"danger\", \"success\", \"warning\", \"primary\", \"info\"][KTUtil.getRandomInt(0, 6)] + '\">' + t.nom.substring(0, 1) + ' ' + t.prenom.substring(0, 1) + '</div>\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"user-card-v2__details\">\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\"' +basePath + segementAdmin + '/settings-advanced/users/detail/' + t.uuid + '\" class=\"user-card-v2__name\">' + t.nom + ' ' + t.prenom + '</a>\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\"user-card-v2__desc\">' + l[s] + \"</span>\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\t\\t</div>\"\n            //return '<div class=\"user-card-v2\">\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"user-card-v2__pic\">\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"badge badge--xl badge--' + [\"success\", \"brand\", \"danger\", \"success\", \"warning\", \"primary\", \"info\"][KTUtil.getRandomInt(0, 6)] + '\">' + t.lastname.substring(0, 1) + ' ' + t.firstname.substring(0, 1) + '</div>\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"user-card-v2__details\">\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\"' + basePath + segementAdmin + '/settings-advanced/users/detail/' + t.uuid + '\" class=\"user-card-v2__name\">' + t.lastname + ' ' + t.firstname + '</a>\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\"user-card-v2__desc\">' + t.email + \"</span>\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\t\\t</div>\"\n\n            return '<div class=\"d-flex align-items-center\"><div class=\"symbol symbol-40 symbol-light-success flex-shrink-0\">\\\r\n                        <span class=\"symbol-label font-size-h4 font-weight-bold badge--' + e[t.group[0].group_id][\"class\"] + '\">\\\r\n                        ' + t.lastname.substring(0, 1) + ' ' + t.firstname.substring(0, 1) + '</span>\\\r\n                        </div><div class=\"ml-4\">\\\r\n                        <div class=\"text-dark-75 font-weight-bolder font-size-lg mb-0\"><a href=\"' + startUrl + '/settings-advanced/users/edit/' + t.uuid + '\" class=\"link text-dark-75\">\\\r\n                        ' + t.lastname + ' ' + t.firstname + '</a></div><span class=\"text-muted font-weight-bold text-hover-primary\">' + t.fonction + \"</span>\\\r\n                        </div></div>\";\n          }\n        }, {\n          field: \"email\",\n          title: _LANG_.email,\n          type: \"email\",\n          //width: 100,\n          template: function template(t) {\n            return '<div class=\"font-weight-bold text-muted\">' + t.email + '</div>';\n          }\n        }, {\n          field: \"phone\",\n          title: \"Tel\",\n          width: \"auto\",\n          autoHide: !1,\n          template: function template(t, e) {\n            for (var a = e + 1; a > 5;) {\n              a -= 3;\n            }\n\n            if (t.phone_mobile == null) t.phone_mobile = \"nc\";\n            if (t.phone == null) t.phone = \"nc\";\n            return '<div class=\"font-weight-bolder font-size-lg mb-0\" >Fixe: <a class=\"font-weight-bold text-muted\" href=\"tel:' + t.phone + '\">' + t.phone + '</a></div>\\\r\n                                        <div class=\"font-weight-bolder font-size-lg mb-0\"> Mobile: <a class=\"font-weight-bold text-muted\" href=\"tel:' + t.phone_mobile + '\">' + t.phone_mobile + \"</a></div>\";\n          }\n        }, {\n          field: \"group_id\",\n          title: \"Role\",\n          sortable: !1,\n          width: 150,\n          template: function template(t) {\n            var e = {\n              1: {\n                \"class\": \"dark\"\n              },\n              2: {\n                \"class\": \"info\"\n              },\n              3: {\n                \"class\": \"warning\"\n              },\n              4: {\n                \"class\": \"info\"\n              },\n              5: {\n                \"class\": \"warning\"\n              },\n              6: {\n                \"class\": \"danger\"\n              },\n              7: {\n                \"class\": \"warning\"\n              }\n            };\n            var groupName = '';\n            $(t.group).each(function (index, value) {\n              groupName += value.name + ', ';\n            });\n            return '<span data-statut=' + t.active + ' class=\"btn btn-bold btn-sm btn-font-sm  btn-' + e[t.group[0].group_id][\"class\"] + ' mr-2 px-2\">' + groupName + \"</span>\";\n          }\n        }, {\n          //$type (1 = publied, 2 = wait corrected, 3 = wait publied, 4 = brouillon)\n          field: \"active\",\n          title: _LANG_.active,\n          sortable: !1,\n          width: 150,\n          template: function template(t) {\n            if (t.active == 1) {\n              var active = 'btn-light-success';\n            } else {\n              var active = 'btn-light-danger';\n            }\n\n            if (t.active == 1) {\n              var textActive = _LANG_.active;\n            } else {\n              var textActive = _LANG_.desactive;\n            }\n\n            if (t.active == 1) {\n              var idActive = 0;\n            } else {\n              var idActive = 1;\n            }\n\n            var template = '<a href=\"javascript:;\" data-statut=\"' + idActive + '\" data-id=\"' + t.id + '\" class=\"actionActive btn btn-bold btn-sm btn-font-sm ' + active + '\">' + textActive + '</a>';\n            return template;\n          }\n        }, {\n          field: \"created_at\",\n          title: _LANG_.date_create,\n          type: \"date\",\n          //width: 100,\n          format: \"MM/DD/YYYY\",\n          template: function template(t) {\n            return '<div class=\"font-weight-bolder text-primary mb-0\">' + t.date_create_format + '</div>';\n          }\n        }, {\n          field: \"Actions\",\n          width: 80,\n          title: \"Actions\",\n          sortable: !1,\n          autoHide: !1,\n          overflow: \"visible\",\n          template: function template(t) {\n            var groupUser = [];\n            var superAdmin = false;\n            $(t.group).each(function (index, value) {\n              groupUser[index] = value.group_id;\n\n              if (value.group_id == '1') {\n                superAdmin = true;\n              }\n            }); // console.log(superAdmin);\n            // console.log(checkValue(1, id_group));\n            // console.log(groupUser);\n            // console.log(id_group);\n\n            if (superAdmin == true && !$.checkValue(1, id_group) || t.id == '1') {\n              if (user_uuid == t.uuid) {\n                var template = '<div class=\"dropdown\">\\\r\n                                    <a href=\"javascript:;\" class=\"btn btn-sm btn-clean btn-icon btn-icon-md\" data-toggle=\"dropdown\">\\\r\n                                    <i class=\"flaticon-more-1\"></i></a>\\\r\n                                    <div class=\"dropdown-menu dropdown-menu-right\">\\\r\n                                    <ul class=\"navi flex-column navi-hover py-2\">';\n                template += '<li class=\"navi-item\">\\\r\n                                    <a href=\"#\" data-controller=\"user\" data-action=\"actionView\" data-module=\"false\" data-value=\"' + t.uuid + '\" class=\"actioncontroller navi-link\">\\\r\n                                    <span class=\"navi-icon\"><i class=\"flaticon2-expand\"></i></span>\\\r\n                                    <span class=\"navi-text\">' + _LANG_.view + '</span>\\\r\n                                    </a></li>';\n                template += '<li class=\"navi-item\">\\\r\n                                    <a href=\"' + startUrl + '/settings-advanced/users/edit/' + t.uuid + '\" class=\"navi-link\">\\\r\n                                    <span class=\"navi-icon\"><i class=\"flaticon2-contract\"></i></span>\\\r\n                                    <span class=\"navi-text\">' + _LANG_.edit + '</span>\\\r\n                                    </a></li>';\n                template += ' </ul></div></div>';\n                return template;\n              } //silent\n\n\n              return template = '';\n            } else {\n              var template = '<div class=\"dropdown\">\\\r\n                                <a href=\"javascript:;\" class=\"btn btn-sm btn-clean btn-icon btn-icon-md\" data-toggle=\"dropdown\">\\\r\n                                <i class=\"flaticon-more-1\"></i></a>\\\r\n                                <div class=\"dropdown-menu dropdown-menu-right\">\\\r\n                                <ul class=\"navi flex-column navi-hover py-2\">';\n              template += '<li class=\"navi-item\">\\\r\n                                <a href=\"#\" data-controller=\"user\" data-action=\"actionView\" data-module=\"false\" data-value=\"' + t.uuid + '\" class=\"actioncontroller navi-link\">\\\r\n                                <span class=\"navi-icon\"><i class=\"flaticon2-expand\"></i></span>\\\r\n                                <span class=\"navi-text\">' + _LANG_.view + '</span>\\\r\n                                </a></li>'; //console.log(id_group.indexOf(groupUser));\n\n              if (superAdmin == true && checkValue(1, id_group) || superAdmin == false) {\n                template += '<li class=\"navi-item\">\\\r\n                                <a href=\"' + startUrl + '/settings-advanced/users/edit/' + t.uuid + '\" class=\"navi-link\">\\\r\n                                <span class=\"navi-icon\"><i class=\"flaticon2-contract\"></i></span>\\\r\n                                <span class=\"navi-text\">' + _LANG_.edit + '</span>\\\r\n                                </a></li>';\n              }\n\n              if (t.id != '1' && t.uuid != user_uuid) {\n                template += ' <li class=\"navi-item\">\\\r\n                                <a href=\"#\" data-id=\"' + t.uuid + '\" class=\"deleterowKtdatatable navi-link\">\\\r\n                                <span class=\"navi-icon\"><i class=\"navi-icon flaticon2-trash\"></i></span>\\\r\n                                <span class=\"navi-text\">' + _LANG_[\"delete\"] + '</span>\\\r\n                                </a>\\\r\n                                </li>';\n              }\n\n              template += ' </ul></div></div>';\n              return template;\n            }\n          }\n        }]\n      }), $(\"#kt_form_status\").on(\"change\", function () {\n        t.search($(this).val().toLowerCase(), \"Status\");\n      }), t.on(\"datatable-on-check datatable-on-uncheck datatable-on-layout-updated\", function (e) {\n        var a = t.rows(\".datatable-row-active\").nodes().length;\n        $(\"#kt_subheader_group_selected_rows\").html(a), a > 0 ? ($(\"#kt_subheader_search\").addClass(\"hidden\"), $(\"#kt_subheader_group_actions\").removeClass(\"hidden\")) : ($(\"#kt_subheader_search\").removeClass(\"hidden\"), $(\"#kt_subheader_group_actions\").addClass(\"hidden\"));\n      }), $(\"#kt_datatable_records_fetch_modal\").on(\"show.bs.modal\", function (e) {\n        var a = new KTDialog({\n          type: \"loader\",\n          placement: \"top center\",\n          message: _LANG_.loading + \"...\"\n        });\n        a.show(), setTimeout(function () {\n          a.hide();\n        }, 1e3);\n\n        for (var n = t.rows(\".datatable-row-active\").nodes().find('.checkbox-single > [type=\"checkbox\"]').map(function (t, e) {\n          return $(e).val();\n        }), s = document.createDocumentFragment(), l = 0; l < n.length; l++) {\n          var i = document.createElement(\"li\");\n          i.setAttribute(\"data-id\", n[l]), i.innerHTML = _LANG_.selected_row_id + \": \" + n[l], s.appendChild(i);\n        }\n\n        $(e.target).find(\"#kt_apps_user_fetch_records_selected\").append(s);\n      }).on(\"hide.bs.modal\", function (t) {\n        $(t.target).find(\"#kt_apps_user_fetch_records_selected\").empty();\n      }), $(\"#kt_subheader_group_actions_status_change\").on(\"click\", \"[data-toggle='status-change']\", function (event) {\n        event.preventDefault();\n        var e = $(this).find(\".nav__link-text\").html(),\n            st = $(this).find(\".nav__link-text\").data('status'),\n            a = t.rows(\".datatable-row-active\").nodes().find('.checkbox-single > [type=\"checkbox\"]').map(function (t, e) {\n          return $(e).val();\n        });\n        a.length > 0 && swal.fire({\n          buttonsStyling: !1,\n          html: _LANG_.are_you_sure_update + \" \" + a.length + \" \" + _LANG_.selected_records_status_to + \" \" + e + \" ?\",\n          type: \"info\",\n          confirmButtonText: _LANG_.yes_update + \"!\",\n          confirmButtonClass: \"btn btn-sm btn-bold btn-success\",\n          showCancelButton: !0,\n          cancelButtonText: _LANG_.no_cancel,\n          cancelButtonClass: \"btn btn-sm btn-bold btn-dark\"\n        }).then(function (t) {\n          if (t.value) {\n            $.ajax({\n              type: 'POST',\n              url: basePath + segementAdmin + \"/sp-admin-ajax\",\n              data: {\n                ajax: true,\n                controller: 'AdminUserController',\n                action: 'update',\n                value: {\n                  selected: a.get(),\n                  active: st\n                },\n                module: false\n              },\n              dataType: \"json\",\n              success: function success(result, status, xhr) {\n                if (xhr.status == 200) {\n                  $.notify({\n                    title: _LANG_.updated + \"!\",\n                    message: result.message\n                  }, {\n                    type: 'success'\n                  });\n                  $(\"#kt_apps_user_list_datatable\").KTDatatable().reload();\n                }\n              }\n            });\n          } else {\n            $.notify({\n              title: _LANG_.cancelled,\n              message: _LANG_.your_seleted_records_statuses_have_not_been_updated\n            }, {\n              type: 'info'\n            });\n          }\n        });\n      }), $(\"#kt_subheader_group_actions_delete_all\").on(\"click\", function () {\n        var e = t.rows(\".datatable-row-active\").nodes().find('.checkbox-single > [type=\"checkbox\"]').map(function (t, e) {\n          return $(e).val();\n        });\n        e.length > 0 && swal.fire({\n          buttonsStyling: !1,\n          text: _LANG_.are_you_sure_delete + \" \" + e.length + \" \" + _LANG_.selected_records + \" ?\",\n          type: \"error\",\n          confirmButtonText: _LANG_.yes_delete + ' !',\n          confirmButtonClass: \"btn btn-sm btn-bold btn-danger\",\n          showCancelButton: !0,\n          cancelButtonText: _LANG_.no_cancel,\n          cancelButtonClass: \"btn btn-sm btn-bold btn-dark\"\n        }).then(function (t) {\n          if (t.value) {\n            var selected = e.get();\n            $.ajax({\n              type: 'POST',\n              url: basePath + segementAdmin + \"/sp-admin-ajax\",\n              data: {\n                ajax: true,\n                controller: 'AdminUserController',\n                action: 'delete',\n                value: {\n                  selected: selected\n                },\n                module: false\n              },\n              dataType: \"json\",\n              success: function success(result, status, xhr) {\n                //Success Message\n                if (xhr.status == 200) {\n                  var kt_subheader_total = $('.kt_subheader_total').text();\n                  $('.kt_subheader_total').html(kt_subheader_total - selected.length);\n                  $.notify({\n                    title: _LANG_.deleted + \"!\",\n                    message: result.message\n                  }, {\n                    type: result.type\n                  });\n                  $(\"#kt_apps_user_list_datatable\").KTDatatable().reload();\n                }\n              }\n            });\n          } else {\n            $.notify({\n              title: _LANG_.deleted,\n              message: _LANG_.your_selected_records_have_not_been_deleted\n            }, {\n              type: 'info'\n            });\n          }\n        });\n      }), t.on(\"datatable-on-layout-updated\", function () {});\n    }\n  };\n}();\n\nKTUtil.ready(function () {\n  KTAppUserListDatatable.init();\n  $(document).on(\"click\", \".actionActive\", function (e) {\n    e.preventDefault();\n    var statut = $(this).attr('data-statut');\n    var id = $(this).attr('data-id');\n    $.ajax({\n      type: 'POST',\n      url: basePath + segementAdmin + \"/sp-admin-ajax\",\n      data: {\n        ajax: true,\n        controller: 'AdminUserController',\n        action: 'changeStatut',\n        value: {\n          statut: statut,\n          id: id\n        },\n        module: false\n      },\n      dataType: \"json\",\n      success: function success(result, status, xhr) {\n        if (xhr.status == 200) {\n          $.notify({\n            title: _LANG_.updated + \"!\",\n            message: result.message\n          }, {\n            type: result.type\n          });\n          $(\"#kt_apps_user_list_datatable\").KTDatatable().reload();\n        }\n      }\n    });\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/metronic/js/pages/custom/user/page.list.user.js\n");

/***/ }),

/***/ 118:
/*!*************************************************************************!*\
  !*** multi ./resources/metronic/js/pages/custom/user/page.list.user.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! G:\wamp64\www\adnsite\public\admin\themes\metronic\resources\metronic\js\pages\custom\user\page.list.user.js */"./resources/metronic/js/pages/custom/user/page.list.user.js");


/***/ })

/******/ });