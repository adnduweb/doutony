/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 115);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/metronic/js/pages/custom/permissions/page.list.permissions.js":
/*!*********************************************************************************!*\
  !*** ./resources/metronic/js/pages/custom/permissions/page.list.permissions.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar KTAppUserListDatatable = function () {\n  var t;\n  return {\n    init: function init() {\n      t = $(\"#kt_apps_permissions_list_datatable\").KTDatatable({\n        data: {\n          type: \"remote\",\n          source: {\n            read: {\n              url: current_url + \"/list\",\n              method: 'GET',\n              params: _defineProperty({}, crsftoken, $('meta[name=\"X-CSRF-TOKEN\"]').attr('content'))\n            }\n          },\n          pageSize: 10,\n          serverPaging: !0,\n          serverFiltering: !0,\n          serverSorting: !0\n        },\n        translate: {\n          records: {\n            processing: _LANG_.loading_wait,\n            noRecords: _LANG_.no_record_found\n          },\n          toolbar: {\n            pagination: {\n              items: {\n                \"default\": {\n                  first: _LANG_.first,\n                  prev: _LANG_.previous,\n                  next: _LANG_.next,\n                  last: _LANG_.last,\n                  more: _LANG_.more_pages,\n                  input: _LANG_.page_number,\n                  select: _LANG_.select_page_size,\n                  all: _LANG_.all\n                },\n                info: _LANG_.showing + ' {{start}} - {{end}} of {{total}}'\n              }\n            }\n          }\n        },\n        layout: {\n          scroll: !1,\n          footer: !1\n        },\n        sortable: !0,\n        pagination: !0,\n        search: {\n          input: $(\"#kt_subheader_search_form\"),\n          delay: 400\n        },\n        rows: {\n          beforeTemplate: function beforeTemplate(row, data, index) {\n            if (data.active == '0') {\n              row.addClass('notactive');\n            }\n          }\n        },\n        columns: [{\n          field: \"id\",\n          title: \"#\",\n          sortable: !1,\n          width: 20,\n          selector: {\n            \"class\": \"checkbox-solid\"\n          },\n          textAlign: \"center\"\n        }, {\n          field: \"name\",\n          title: _LANG_.titre,\n          width: 200,\n          template: function template(t) {\n            return '<a href=\"' + startUrl + '/settings-advanced/permissions/edit/' + t.id + '\" class=\"capitalize text-dark-75 font-weight-bolder font-size-lg mb-0\"> ' + t.name + '</a>';\n          }\n        }, {\n          field: \"description\",\n          title: _LANG_.description,\n          type: \"description\" //width: 100,\n\n        }, {\n          field: \"Actions\",\n          width: 80,\n          title: \"Actions\",\n          sortable: !1,\n          autoHide: !1,\n          overflow: \"visible\",\n          template: function template(t) {\n            //return '\\t\\t\\t\\t\\t\\t\\t<div class=\"dropdown\">\\t\\t\\t\\t\\t\\t\\t\\t<a href=\"javascript:;\" class=\"btn btn-sm btn-clean btn-icon btn-icon-md\" data-toggle=\"dropdown\">\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"flaticon-more-1\"></i>\\t\\t\\t\\t\\t\\t\\t\\t</a>\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"dropdown-menu dropdown-menu-right\">\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\"kt-nav\">\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li class=\"kt-nav__item\">\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\"#\" data-controller=\"roles\" data-action=\"actionView\" data-value=\"' + t.id + '\" class=\"actioncontroller kt-nav__link\">\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"kt-nav__link-icon flaticon2-expand\"></i>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\"kt-nav__link-text\">' + _LANG_.view + '</span>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li class=\"kt-nav__item\">\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\"' + basePath + segementAdmin + '/roles/detail/' + t.id + '\" class=\"kt-nav__link\">\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"kt-nav__link-icon flaticon2-contract\"></i>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\"kt-nav__link-text\">' + _LANG_.edit + '</span>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li class=\"kt-nav__item\">\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\"#\" data-id=\"' + t.id + '\" class=\"deleterowKtdatatable kt-nav__link\">\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"kt-nav__link-icon flaticon2-trash\"></i>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\"kt-nav__link-text\">' + _LANG_.delete + '</span>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\t'\n            if (t.is_natif != '1') {\n              var template = '<div class=\"dropdown\">\\\r\n                                <a href=\"javascript:;\" class=\"btn btn-sm btn-clean btn-icon btn-icon-md\" data-toggle=\"dropdown\">\\\r\n                                <i class=\"flaticon-more-1\"></i></a>\\\r\n                                <div class=\"dropdown-menu dropdown-menu-right\">\\\r\n                                <ul class=\"navi flex-column navi-hover py-2\">\\\r\n                                <li class=\"navi-item\">\\\r\n                                <a href=\"' + startUrl + '/settings-advanced/permissions/edit/' + t.id + '\" class=\"navi-link\">\\\r\n                                <span class=\"navi-icon\"><i class=\"flaticon2-contract\"></i></span>\\\r\n                                <span class=\"navi-text\">' + _LANG_.edit + '</span>\\\r\n                                </a></li>';\n              template += ' <li class=\"navi-item\">\\\r\n                                <a href=\"#\" data-id=\"' + t.id + '\" class=\"deleterowKtdatatable navi-link\">\\\r\n                                <span class=\"navi-icon\"><i class=\"flaticon2-trash\"></i></span>\\\r\n                                <span class=\"navi-text\">' + _LANG_[\"delete\"] + '</span>\\\r\n                                </a>\\\r\n                                </li>';\n              template += ' </ul></div></div>';\n              return template;\n            } else {\n              var template = '';\n              return template;\n            }\n          }\n        }]\n      }), $(\"#kt_form_status\").on(\"change\", function () {\n        t.search($(this).val().toLowerCase(), \"Status\");\n      }), t.on(\"datatable-on-check datatable-on-uncheck datatable-on-layout-updated\", function (e) {\n        var a = t.rows(\".datatable-row-active\").nodes().length;\n        $(\"#kt_subheader_group_selected_rows\").html(a), a > 0 ? ($(\"#kt_subheader_search\").addClass(\"hidden\"), $(\"#kt_subheader_group_actions\").removeClass(\"hidden\")) : ($(\"#kt_subheader_search\").removeClass(\"hidden\"), $(\"#kt_subheader_group_actions\").addClass(\"hidden\"));\n      }), $(\"#kt_datatable_records_fetch_modal\").on(\"show.bs.modal\", function (e) {\n        var a = new KTDialog({\n          type: \"loader\",\n          placement: \"top center\",\n          message: _LANG_.loading + \"...\"\n        });\n        a.show(), setTimeout(function () {\n          a.hide();\n        }, 1e3);\n\n        for (var n = t.rows(\".datatable-row-active\").nodes().find('.checkbox-single > [type=\"checkbox\"]').map(function (t, e) {\n          return $(e).val();\n        }), s = document.createDocumentFragment(), l = 0; l < n.length; l++) {\n          var i = document.createElement(\"li\");\n          i.setAttribute(\"data-id\", n[l]), i.innerHTML = _LANG_.selected_row_id + \": \" + n[l], s.appendChild(i);\n        }\n\n        $(e.target).find(\"#kt_apps_user_fetch_records_selected\").append(s);\n      }).on(\"hide.bs.modal\", function (t) {\n        $(t.target).find(\"#kt_apps_user_fetch_records_selected\").empty();\n      }), $(\"#kt_subheader_group_actions_status_change\").on(\"click\", \"[data-toggle='status-change']\", function (event) {\n        event.preventDefault();\n        var e = $(this).find(\".kt-nav__link-text\").html(),\n            st = $(this).find(\".kt-nav__link-text\").data('status'),\n            a = t.rows(\".datatable-row-active\").nodes().find('.checkbox-single > [type=\"checkbox\"]').map(function (t, e) {\n          return $(e).val();\n        });\n        a.length > 0 && swal.fire({\n          buttonsStyling: !1,\n          html: _LANG_.are_you_sure_update + \" \" + a.length + \" \" + _LANG_.selected_records_status_to + \" \" + e + \" ?\",\n          type: \"info\",\n          confirmButtonText: _LANG_.yes_update + \"!\",\n          confirmButtonClass: \"btn btn-sm btn-bold btn-dark\",\n          showCancelButton: !0,\n          cancelButtonText: _LANG_.no_cancel,\n          cancelButtonClass: \"btn btn-sm btn-bold btn-default\"\n        }).then(function (t) {\n          if (t.value) {\n            $.ajax({\n              type: 'POST',\n              url: basePath + segementAdmin + \"/sp-admin-ajax\",\n              data: {\n                ajax: true,\n                controller: 'AdminPermissionController',\n                action: 'update',\n                value: {\n                  selected: a.get(),\n                  active: st\n                },\n                module: false\n              },\n              dataType: \"json\",\n              success: function success(result, status, xhr) {\n                if (xhr.status == 200) {\n                  $.notify({\n                    title: _LANG_.updated + \"!\",\n                    message: result.message\n                  }, {\n                    type: result.type\n                  });\n                  $(\"#kt_apps_permissions_list_datatable\").KTDatatable().reload();\n                }\n              }\n            });\n          } else {\n            $.notify({\n              title: _LANG_.cancelled,\n              message: _LANG_.your_seleted_records_statuses_have_not_been_updated\n            }, {\n              type: 'info'\n            });\n          }\n        });\n      }), $(\"#kt_subheader_group_actions_delete_all\").on(\"click\", function () {\n        var e = t.rows(\".datatable-row-active\").nodes().find('.checkbox-single > [type=\"checkbox\"]').map(function (t, e) {\n          return $(e).val();\n        });\n        e.length > 0 && swal.fire({\n          buttonsStyling: !1,\n          text: _LANG_.are_you_sure_delete + \" \" + e.length + \" \" + _LANG_.selected_records + \" ?\",\n          type: \"error\",\n          confirmButtonText: _LANG_.yes_delete + ' !',\n          confirmButtonClass: \"btn btn-sm btn-bold btn-danger\",\n          showCancelButton: !0,\n          cancelButtonText: _LANG_.no_cancel,\n          cancelButtonClass: \"btn btn-sm btn-bold btn-dark\"\n        }).then(function (t) {\n          if (t.value) {\n            var _data;\n\n            var selected = e.get();\n            $.ajax({\n              type: 'DELETE',\n              url: current_url + \"/delete\",\n              data: (_data = {}, _defineProperty(_data, crsftoken, $('meta[name=\"X-CSRF-TOKEN\"]').attr('content')), _defineProperty(_data, \"id\", selected), _data),\n              dataType: \"json\",\n              success: function success(result, status, xhr) {\n                //Success Message\n                if (xhr.status == 200) {\n                  var kt_subheader_total = $('.kt_subheader_total').text();\n                  $('.kt_subheader_total').html(kt_subheader_total - selected.length);\n                  $.notify({\n                    title: result.success.message ? _LANG_.deleted + \"!\" : _LANG_.warning + \"!\",\n                    message: result.success.message ? result.success.message : result.error.message\n                  }, {\n                    type: result.success.message ? 'success' : 'warning'\n                  });\n                  $(\"#kt_apps_permissions_list_datatable\").KTDatatable().reload();\n                }\n              }\n            });\n          } else {\n            $.notify({\n              title: _LANG_.deleted,\n              message: _LANG_.your_selected_records_have_not_been_deleted\n            }, {\n              type: 'info'\n            });\n          }\n        });\n      }), t.on(\"datatable-on-layout-updated\", function () {});\n    }\n  };\n}();\n\nKTUtil.ready(function () {\n  KTAppUserListDatatable.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvbWV0cm9uaWMvanMvcGFnZXMvY3VzdG9tL3Blcm1pc3Npb25zL3BhZ2UubGlzdC5wZXJtaXNzaW9ucy5qcz8xMjlhIl0sIm5hbWVzIjpbIktUQXBwVXNlckxpc3REYXRhdGFibGUiLCJ0IiwiaW5pdCIsIiQiLCJLVERhdGF0YWJsZSIsImRhdGEiLCJ0eXBlIiwic291cmNlIiwicmVhZCIsInVybCIsImN1cnJlbnRfdXJsIiwibWV0aG9kIiwicGFyYW1zIiwiY3JzZnRva2VuIiwiYXR0ciIsInBhZ2VTaXplIiwic2VydmVyUGFnaW5nIiwic2VydmVyRmlsdGVyaW5nIiwic2VydmVyU29ydGluZyIsInRyYW5zbGF0ZSIsInJlY29yZHMiLCJwcm9jZXNzaW5nIiwiX0xBTkdfIiwibG9hZGluZ193YWl0Iiwibm9SZWNvcmRzIiwibm9fcmVjb3JkX2ZvdW5kIiwidG9vbGJhciIsInBhZ2luYXRpb24iLCJpdGVtcyIsImZpcnN0IiwicHJldiIsInByZXZpb3VzIiwibmV4dCIsImxhc3QiLCJtb3JlIiwibW9yZV9wYWdlcyIsImlucHV0IiwicGFnZV9udW1iZXIiLCJzZWxlY3QiLCJzZWxlY3RfcGFnZV9zaXplIiwiYWxsIiwiaW5mbyIsInNob3dpbmciLCJsYXlvdXQiLCJzY3JvbGwiLCJmb290ZXIiLCJzb3J0YWJsZSIsInNlYXJjaCIsImRlbGF5Iiwicm93cyIsImJlZm9yZVRlbXBsYXRlIiwicm93IiwiaW5kZXgiLCJhY3RpdmUiLCJhZGRDbGFzcyIsImNvbHVtbnMiLCJmaWVsZCIsInRpdGxlIiwid2lkdGgiLCJzZWxlY3RvciIsInRleHRBbGlnbiIsInRpdHJlIiwidGVtcGxhdGUiLCJzdGFydFVybCIsImlkIiwibmFtZSIsImRlc2NyaXB0aW9uIiwiYXV0b0hpZGUiLCJvdmVyZmxvdyIsImlzX25hdGlmIiwiZWRpdCIsIm9uIiwidmFsIiwidG9Mb3dlckNhc2UiLCJlIiwiYSIsIm5vZGVzIiwibGVuZ3RoIiwiaHRtbCIsInJlbW92ZUNsYXNzIiwiS1REaWFsb2ciLCJwbGFjZW1lbnQiLCJtZXNzYWdlIiwibG9hZGluZyIsInNob3ciLCJzZXRUaW1lb3V0IiwiaGlkZSIsIm4iLCJmaW5kIiwibWFwIiwicyIsImRvY3VtZW50IiwiY3JlYXRlRG9jdW1lbnRGcmFnbWVudCIsImwiLCJpIiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZSIsImlubmVySFRNTCIsInNlbGVjdGVkX3Jvd19pZCIsImFwcGVuZENoaWxkIiwidGFyZ2V0IiwiYXBwZW5kIiwiZW1wdHkiLCJldmVudCIsInByZXZlbnREZWZhdWx0Iiwic3QiLCJzd2FsIiwiZmlyZSIsImJ1dHRvbnNTdHlsaW5nIiwiYXJlX3lvdV9zdXJlX3VwZGF0ZSIsInNlbGVjdGVkX3JlY29yZHNfc3RhdHVzX3RvIiwiY29uZmlybUJ1dHRvblRleHQiLCJ5ZXNfdXBkYXRlIiwiY29uZmlybUJ1dHRvbkNsYXNzIiwic2hvd0NhbmNlbEJ1dHRvbiIsImNhbmNlbEJ1dHRvblRleHQiLCJub19jYW5jZWwiLCJjYW5jZWxCdXR0b25DbGFzcyIsInRoZW4iLCJ2YWx1ZSIsImFqYXgiLCJiYXNlUGF0aCIsInNlZ2VtZW50QWRtaW4iLCJjb250cm9sbGVyIiwiYWN0aW9uIiwic2VsZWN0ZWQiLCJnZXQiLCJtb2R1bGUiLCJkYXRhVHlwZSIsInN1Y2Nlc3MiLCJyZXN1bHQiLCJzdGF0dXMiLCJ4aHIiLCJub3RpZnkiLCJ1cGRhdGVkIiwicmVsb2FkIiwiY2FuY2VsbGVkIiwieW91cl9zZWxldGVkX3JlY29yZHNfc3RhdHVzZXNfaGF2ZV9ub3RfYmVlbl91cGRhdGVkIiwidGV4dCIsImFyZV95b3Vfc3VyZV9kZWxldGUiLCJzZWxlY3RlZF9yZWNvcmRzIiwieWVzX2RlbGV0ZSIsImt0X3N1YmhlYWRlcl90b3RhbCIsImRlbGV0ZWQiLCJ3YXJuaW5nIiwiZXJyb3IiLCJ5b3VyX3NlbGVjdGVkX3JlY29yZHNfaGF2ZV9ub3RfYmVlbl9kZWxldGVkIiwiS1RVdGlsIiwicmVhZHkiXSwi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SEg7QUFNSDtBQUNKLFNBM0NlLENBQWhCO0FBNENILE9BaERHLENBbk1KLEVBbVBJTCxDQUFDLENBQUNzRSxFQUFGLENBQUssNkJBQUwsRUFBb0MsWUFBVyxDQUFFLENBQWpELENBblBKO0FBb1BIO0FBdFBFLEdBQVA7QUF3UEgsQ0ExUDRCLEVBQTdCOztBQTJQQTRFLE1BQU0sQ0FBQ0MsS0FBUCxDQUFhLFlBQVc7QUFDcEJwSix3QkFBc0IsQ0FBQ0UsSUFBdkI7QUFDSCxDQUZEIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL21ldHJvbmljL2pzL3BhZ2VzL2N1c3RvbS9wZXJtaXNzaW9ucy9wYWdlLmxpc3QucGVybWlzc2lvbnMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxudmFyIEtUQXBwVXNlckxpc3REYXRhdGFibGUgPSBmdW5jdGlvbigpIHtcclxuICAgIHZhciB0O1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBpbml0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgdCA9ICQoXCIja3RfYXBwc19wZXJtaXNzaW9uc19saXN0X2RhdGF0YWJsZVwiKS5LVERhdGF0YWJsZSh7XHJcbiAgICAgICAgICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJyZW1vdGVcIixcclxuICAgICAgICAgICAgICAgICAgICBzb3VyY2U6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVhZDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBjdXJyZW50X3VybCArIFwiL2xpc3RcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ0dFVCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbY3JzZnRva2VuXTogJCgnbWV0YVtuYW1lPVwiWC1DU1JGLVRPS0VOXCJdJykuYXR0cignY29udGVudCcpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBwYWdlU2l6ZTogMTAsXHJcbiAgICAgICAgICAgICAgICAgICAgc2VydmVyUGFnaW5nOiAhMCxcclxuICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJGaWx0ZXJpbmc6ICEwLFxyXG4gICAgICAgICAgICAgICAgICAgIHNlcnZlclNvcnRpbmc6ICEwXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgdHJhbnNsYXRlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVjb3Jkczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9jZXNzaW5nOiBfTEFOR18ubG9hZGluZ193YWl0LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBub1JlY29yZHM6IF9MQU5HXy5ub19yZWNvcmRfZm91bmQsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB0b29sYmFyOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZ2luYXRpb246IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1zOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaXJzdDogX0xBTkdfLmZpcnN0LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmV2OiBfTEFOR18ucHJldmlvdXMsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5leHQ6IF9MQU5HXy5uZXh0LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0OiBfTEFOR18ubGFzdCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9yZTogX0xBTkdfLm1vcmVfcGFnZXMsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0OiBfTEFOR18ucGFnZV9udW1iZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdDogX0xBTkdfLnNlbGVjdF9wYWdlX3NpemUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsbDogX0xBTkdfLmFsbCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZm86IF9MQU5HXy5zaG93aW5nICsgJyB7e3N0YXJ0fX0gLSB7e2VuZH19IG9mIHt7dG90YWx9fScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgbGF5b3V0OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgc2Nyb2xsOiAhMSxcclxuICAgICAgICAgICAgICAgICAgICBmb290ZXI6ICExXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgc29ydGFibGU6ICEwLFxyXG4gICAgICAgICAgICAgICAgcGFnaW5hdGlvbjogITAsXHJcbiAgICAgICAgICAgICAgICBzZWFyY2g6IHtcclxuICAgICAgICAgICAgICAgICAgICBpbnB1dDogJChcIiNrdF9zdWJoZWFkZXJfc2VhcmNoX2Zvcm1cIiksXHJcbiAgICAgICAgICAgICAgICAgICAgZGVsYXk6IDQwMFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHJvd3M6IHtcclxuICAgICAgICAgICAgICAgICAgICBiZWZvcmVUZW1wbGF0ZTogZnVuY3Rpb24ocm93LCBkYXRhLCBpbmRleCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5hY3RpdmUgPT0gJzAnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3cuYWRkQ2xhc3MoJ25vdGFjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGNvbHVtbnM6IFt7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkOiBcImlkXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiBcIiNcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgc29ydGFibGU6ICExLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMjAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzczogXCJjaGVja2JveC1zb2xpZFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHRBbGlnbjogXCJjZW50ZXJcIlxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmaWVsZDogXCJuYW1lXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiBfTEFOR18udGl0cmUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAyMDAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlOiBmdW5jdGlvbih0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJzxhIGhyZWY9XCInICsgc3RhcnRVcmwgKyAnL3NldHRpbmdzLWFkdmFuY2VkL3Blcm1pc3Npb25zL2VkaXQvJyArIHQuaWQgKyAnXCIgY2xhc3M9XCJjYXBpdGFsaXplIHRleHQtZGFyay03NSBmb250LXdlaWdodC1ib2xkZXIgZm9udC1zaXplLWxnIG1iLTBcIj4gJyArIHQubmFtZSArICc8L2E+JztcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICB9LCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkOiBcImRlc2NyaXB0aW9uXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiBfTEFOR18uZGVzY3JpcHRpb24sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiZGVzY3JpcHRpb25cIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy93aWR0aDogMTAwLFxyXG5cclxuICAgICAgICAgICAgICAgICAgICB9LCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkOiBcIkFjdGlvbnNcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDgwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogXCJBY3Rpb25zXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNvcnRhYmxlOiAhMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXV0b0hpZGU6ICExLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBvdmVyZmxvdzogXCJ2aXNpYmxlXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlOiBmdW5jdGlvbih0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL3JldHVybiAnXFx0XFx0XFx0XFx0XFx0XFx0XFx0PGRpdiBjbGFzcz1cImRyb3Bkb3duXCI+XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0PGEgaHJlZj1cImphdmFzY3JpcHQ6O1wiIGNsYXNzPVwiYnRuIGJ0bi1zbSBidG4tY2xlYW4gYnRuLWljb24gYnRuLWljb24tbWRcIiBkYXRhLXRvZ2dsZT1cImRyb3Bkb3duXCI+XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0PGkgY2xhc3M9XCJmbGF0aWNvbi1tb3JlLTFcIj48L2k+XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0PC9hPlxcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdDxkaXYgY2xhc3M9XCJkcm9wZG93bi1tZW51IGRyb3Bkb3duLW1lbnUtcmlnaHRcIj5cXHRcXHRcXHRcXHRcXHRcXHRcXHRcXHRcXHQ8dWwgY2xhc3M9XCJrdC1uYXZcIj5cXHRcXHRcXHRcXHRcXHRcXHRcXHRcXHRcXHRcXHQ8bGkgY2xhc3M9XCJrdC1uYXZfX2l0ZW1cIj5cXHRcXHRcXHRcXHRcXHRcXHRcXHRcXHRcXHRcXHRcXHQ8YSBocmVmPVwiI1wiIGRhdGEtY29udHJvbGxlcj1cInJvbGVzXCIgZGF0YS1hY3Rpb249XCJhY3Rpb25WaWV3XCIgZGF0YS12YWx1ZT1cIicgKyB0LmlkICsgJ1wiIGNsYXNzPVwiYWN0aW9uY29udHJvbGxlciBrdC1uYXZfX2xpbmtcIj5cXHRcXHRcXHRcXHRcXHRcXHRcXHRcXHRcXHRcXHRcXHRcXHQ8aSBjbGFzcz1cImt0LW5hdl9fbGluay1pY29uIGZsYXRpY29uMi1leHBhbmRcIj48L2k+XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0PHNwYW4gY2xhc3M9XCJrdC1uYXZfX2xpbmstdGV4dFwiPicgKyBfTEFOR18udmlldyArICc8L3NwYW4+XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0PC9hPlxcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdDwvbGk+XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0PGxpIGNsYXNzPVwia3QtbmF2X19pdGVtXCI+XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0PGEgaHJlZj1cIicgKyBiYXNlUGF0aCArIHNlZ2VtZW50QWRtaW4gKyAnL3JvbGVzL2RldGFpbC8nICsgdC5pZCArICdcIiBjbGFzcz1cImt0LW5hdl9fbGlua1wiPlxcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdDxpIGNsYXNzPVwia3QtbmF2X19saW5rLWljb24gZmxhdGljb24yLWNvbnRyYWN0XCI+PC9pPlxcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdDxzcGFuIGNsYXNzPVwia3QtbmF2X19saW5rLXRleHRcIj4nICsgX0xBTkdfLmVkaXQgKyAnPC9zcGFuPlxcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdDwvYT5cXHRcXHRcXHRcXHRcXHRcXHRcXHRcXHRcXHRcXHQ8L2xpPlxcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdDxsaSBjbGFzcz1cImt0LW5hdl9faXRlbVwiPlxcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdDxhIGhyZWY9XCIjXCIgZGF0YS1pZD1cIicgKyB0LmlkICsgJ1wiIGNsYXNzPVwiZGVsZXRlcm93S3RkYXRhdGFibGUga3QtbmF2X19saW5rXCI+XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0PGkgY2xhc3M9XCJrdC1uYXZfX2xpbmstaWNvbiBmbGF0aWNvbjItdHJhc2hcIj48L2k+XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0PHNwYW4gY2xhc3M9XCJrdC1uYXZfX2xpbmstdGV4dFwiPicgKyBfTEFOR18uZGVsZXRlICsgJzwvc3Bhbj5cXHRcXHRcXHRcXHRcXHRcXHRcXHRcXHRcXHRcXHRcXHQ8L2E+XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0PC9saT5cXHRcXHRcXHRcXHRcXHRcXHRcXHRcXHRcXHRcXHQ8L3VsPlxcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdDwvZGl2PlxcdFxcdFxcdFxcdFxcdFxcdFxcdDwvZGl2PlxcdFxcdFxcdFxcdFxcdFxcdCdcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0LmlzX25hdGlmICE9ICcxJykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0ZW1wbGF0ZSA9ICc8ZGl2IGNsYXNzPVwiZHJvcGRvd25cIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJqYXZhc2NyaXB0OjtcIiBjbGFzcz1cImJ0biBidG4tc20gYnRuLWNsZWFuIGJ0bi1pY29uIGJ0bi1pY29uLW1kXCIgZGF0YS10b2dnbGU9XCJkcm9wZG93blwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJmbGF0aWNvbi1tb3JlLTFcIj48L2k+PC9hPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRyb3Bkb3duLW1lbnUgZHJvcGRvd24tbWVudS1yaWdodFwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPVwibmF2aSBmbGV4LWNvbHVtbiBuYXZpLWhvdmVyIHB5LTJcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz1cIm5hdmktaXRlbVwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cIicgKyBzdGFydFVybCArICcvc2V0dGluZ3MtYWR2YW5jZWQvcGVybWlzc2lvbnMvZWRpdC8nICsgdC5pZCArICdcIiBjbGFzcz1cIm5hdmktbGlua1wiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJuYXZpLWljb25cIj48aSBjbGFzcz1cImZsYXRpY29uMi1jb250cmFjdFwiPjwvaT48L3NwYW4+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cIm5hdmktdGV4dFwiPicgKyBfTEFOR18uZWRpdCArICc8L3NwYW4+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+PC9saT4nO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZSArPSAnIDxsaSBjbGFzcz1cIm5hdmktaXRlbVwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cIiNcIiBkYXRhLWlkPVwiJyArIHQuaWQgKyAnXCIgY2xhc3M9XCJkZWxldGVyb3dLdGRhdGF0YWJsZSBuYXZpLWxpbmtcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwibmF2aS1pY29uXCI+PGkgY2xhc3M9XCJmbGF0aWNvbjItdHJhc2hcIj48L2k+PC9zcGFuPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJuYXZpLXRleHRcIj4nICsgX0xBTkdfLmRlbGV0ZSArICc8L3NwYW4+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPic7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlICs9ICcgPC91bD48L2Rpdj48L2Rpdj4nO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0ZW1wbGF0ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRlbXBsYXRlID0gJyc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRlbXBsYXRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgXVxyXG4gICAgICAgICAgICB9KSwgJChcIiNrdF9mb3JtX3N0YXR1c1wiKS5vbihcImNoYW5nZVwiLCBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgIHQuc2VhcmNoKCQodGhpcykudmFsKCkudG9Mb3dlckNhc2UoKSwgXCJTdGF0dXNcIilcclxuICAgICAgICAgICAgfSksIHQub24oXCJkYXRhdGFibGUtb24tY2hlY2sgZGF0YXRhYmxlLW9uLXVuY2hlY2sgZGF0YXRhYmxlLW9uLWxheW91dC11cGRhdGVkXCIsIGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgICAgIHZhciBhID0gdC5yb3dzKFwiLmRhdGF0YWJsZS1yb3ctYWN0aXZlXCIpLm5vZGVzKCkubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgJChcIiNrdF9zdWJoZWFkZXJfZ3JvdXBfc2VsZWN0ZWRfcm93c1wiKS5odG1sKGEpLCBhID4gMCA/ICgkKFwiI2t0X3N1YmhlYWRlcl9zZWFyY2hcIikuYWRkQ2xhc3MoXCJoaWRkZW5cIiksICQoXCIja3Rfc3ViaGVhZGVyX2dyb3VwX2FjdGlvbnNcIikucmVtb3ZlQ2xhc3MoXCJoaWRkZW5cIikpIDogKCQoXCIja3Rfc3ViaGVhZGVyX3NlYXJjaFwiKS5yZW1vdmVDbGFzcyhcImhpZGRlblwiKSwgJChcIiNrdF9zdWJoZWFkZXJfZ3JvdXBfYWN0aW9uc1wiKS5hZGRDbGFzcyhcImhpZGRlblwiKSlcclxuICAgICAgICAgICAgfSksICQoXCIja3RfZGF0YXRhYmxlX3JlY29yZHNfZmV0Y2hfbW9kYWxcIikub24oXCJzaG93LmJzLm1vZGFsXCIsIGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgICAgIHZhciBhID0gbmV3IEtURGlhbG9nKHtcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImxvYWRlclwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHBsYWNlbWVudDogXCJ0b3AgY2VudGVyXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogX0xBTkdfLmxvYWRpbmcgKyBcIi4uLlwiXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIGEuc2hvdygpLCBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGEuaGlkZSgpXHJcbiAgICAgICAgICAgICAgICB9LCAxZTMpO1xyXG4gICAgICAgICAgICAgICAgZm9yICh2YXIgbiA9IHQucm93cyhcIi5kYXRhdGFibGUtcm93LWFjdGl2ZVwiKS5ub2RlcygpLmZpbmQoJy5jaGVja2JveC1zaW5nbGUgPiBbdHlwZT1cImNoZWNrYm94XCJdJykubWFwKGZ1bmN0aW9uKHQsIGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICQoZSkudmFsKClcclxuICAgICAgICAgICAgICAgICAgICB9KSwgcyA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSwgbCA9IDA7IGwgPCBuLmxlbmd0aDsgbCsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgaS5zZXRBdHRyaWJ1dGUoXCJkYXRhLWlkXCIsIG5bbF0pLCBpLmlubmVySFRNTCA9IF9MQU5HXy5zZWxlY3RlZF9yb3dfaWQgKyBcIjogXCIgKyBuW2xdLCBzLmFwcGVuZENoaWxkKGkpXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAkKGUudGFyZ2V0KS5maW5kKFwiI2t0X2FwcHNfdXNlcl9mZXRjaF9yZWNvcmRzX3NlbGVjdGVkXCIpLmFwcGVuZChzKVxyXG4gICAgICAgICAgICB9KS5vbihcImhpZGUuYnMubW9kYWxcIiwgZnVuY3Rpb24odCkge1xyXG4gICAgICAgICAgICAgICAgJCh0LnRhcmdldCkuZmluZChcIiNrdF9hcHBzX3VzZXJfZmV0Y2hfcmVjb3Jkc19zZWxlY3RlZFwiKS5lbXB0eSgpXHJcbiAgICAgICAgICAgIH0pLCAkKFwiI2t0X3N1YmhlYWRlcl9ncm91cF9hY3Rpb25zX3N0YXR1c19jaGFuZ2VcIikub24oXCJjbGlja1wiLCBcIltkYXRhLXRvZ2dsZT0nc3RhdHVzLWNoYW5nZSddXCIsIGZ1bmN0aW9uKGV2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGUgPSAkKHRoaXMpLmZpbmQoXCIua3QtbmF2X19saW5rLXRleHRcIikuaHRtbCgpLFxyXG4gICAgICAgICAgICAgICAgICAgIHN0ID0gJCh0aGlzKS5maW5kKFwiLmt0LW5hdl9fbGluay10ZXh0XCIpLmRhdGEoJ3N0YXR1cycpLFxyXG4gICAgICAgICAgICAgICAgICAgIGEgPSB0LnJvd3MoXCIuZGF0YXRhYmxlLXJvdy1hY3RpdmVcIikubm9kZXMoKS5maW5kKCcuY2hlY2tib3gtc2luZ2xlID4gW3R5cGU9XCJjaGVja2JveFwiXScpLm1hcChmdW5jdGlvbih0LCBlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAkKGUpLnZhbCgpXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICBhLmxlbmd0aCA+IDAgJiYgc3dhbC5maXJlKHtcclxuICAgICAgICAgICAgICAgICAgICBidXR0b25zU3R5bGluZzogITEsXHJcbiAgICAgICAgICAgICAgICAgICAgaHRtbDogX0xBTkdfLmFyZV95b3Vfc3VyZV91cGRhdGUgKyBcIiBcIiArIGEubGVuZ3RoICsgXCIgXCIgKyBfTEFOR18uc2VsZWN0ZWRfcmVjb3Jkc19zdGF0dXNfdG8gKyBcIiBcIiArIGUgKyBcIiA/XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJpbmZvXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6IF9MQU5HXy55ZXNfdXBkYXRlICsgXCIhXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgY29uZmlybUJ1dHRvbkNsYXNzOiBcImJ0biBidG4tc20gYnRuLWJvbGQgYnRuLWRhcmtcIixcclxuICAgICAgICAgICAgICAgICAgICBzaG93Q2FuY2VsQnV0dG9uOiAhMCxcclxuICAgICAgICAgICAgICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiBfTEFOR18ubm9fY2FuY2VsLFxyXG4gICAgICAgICAgICAgICAgICAgIGNhbmNlbEJ1dHRvbkNsYXNzOiBcImJ0biBidG4tc20gYnRuLWJvbGQgYnRuLWRlZmF1bHRcIlxyXG4gICAgICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbih0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHQudmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdQT1NUJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogYmFzZVBhdGggKyBzZWdlbWVudEFkbWluICsgXCIvc3AtYWRtaW4tYWpheFwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFqYXg6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ0FkbWluUGVybWlzc2lvbkNvbnRyb2xsZXInLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjdGlvbjogJ3VwZGF0ZScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGEuZ2V0KCksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjdGl2ZTogc3RcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZTogZmFsc2VcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhVHlwZTogXCJqc29uXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXN1bHQsIHN0YXR1cywgeGhyKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh4aHIuc3RhdHVzID09IDIwMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkLm5vdGlmeSh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogX0xBTkdfLnVwZGF0ZWQgKyBcIiFcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IHJlc3VsdC5tZXNzYWdlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHJlc3VsdC50eXBlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiI2t0X2FwcHNfcGVybWlzc2lvbnNfbGlzdF9kYXRhdGFibGVcIikuS1REYXRhdGFibGUoKS5yZWxvYWQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJC5ub3RpZnkoe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6IF9MQU5HXy5jYW5jZWxsZWQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBfTEFOR18ueW91cl9zZWxldGVkX3JlY29yZHNfc3RhdHVzZXNfaGF2ZV9ub3RfYmVlbl91cGRhdGVkXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdpbmZvJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9KSwgJChcIiNrdF9zdWJoZWFkZXJfZ3JvdXBfYWN0aW9uc19kZWxldGVfYWxsXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgZSA9IHQucm93cyhcIi5kYXRhdGFibGUtcm93LWFjdGl2ZVwiKS5ub2RlcygpLmZpbmQoJy5jaGVja2JveC1zaW5nbGUgPiBbdHlwZT1cImNoZWNrYm94XCJdJykubWFwKGZ1bmN0aW9uKHQsIGUpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJChlKS52YWwoKVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICBlLmxlbmd0aCA+IDAgJiYgc3dhbC5maXJlKHtcclxuICAgICAgICAgICAgICAgICAgICBidXR0b25zU3R5bGluZzogITEsXHJcbiAgICAgICAgICAgICAgICAgICAgdGV4dDogX0xBTkdfLmFyZV95b3Vfc3VyZV9kZWxldGUgKyBcIiBcIiArIGUubGVuZ3RoICsgXCIgXCIgKyBfTEFOR18uc2VsZWN0ZWRfcmVjb3JkcyArIFwiID9cIixcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImVycm9yXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6IF9MQU5HXy55ZXNfZGVsZXRlICsgJyAhJyxcclxuICAgICAgICAgICAgICAgICAgICBjb25maXJtQnV0dG9uQ2xhc3M6IFwiYnRuIGJ0bi1zbSBidG4tYm9sZCBidG4tZGFuZ2VyXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogITAsXHJcbiAgICAgICAgICAgICAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogX0xBTkdfLm5vX2NhbmNlbCxcclxuICAgICAgICAgICAgICAgICAgICBjYW5jZWxCdXR0b25DbGFzczogXCJidG4gYnRuLXNtIGJ0bi1ib2xkIGJ0bi1kYXJrXCJcclxuICAgICAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24odCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0LnZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzZWxlY3RlZCA9IGUuZ2V0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnREVMRVRFJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogY3VycmVudF91cmwgKyBcIi9kZWxldGVcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbY3JzZnRva2VuXTogJCgnbWV0YVtuYW1lPVwiWC1DU1JGLVRPS0VOXCJdJykuYXR0cignY29udGVudCcpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBzZWxlY3RlZFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlc3VsdCwgc3RhdHVzLCB4aHIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL1N1Y2Nlc3MgTWVzc2FnZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh4aHIuc3RhdHVzID09IDIwMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIga3Rfc3ViaGVhZGVyX3RvdGFsID0gJCgnLmt0X3N1YmhlYWRlcl90b3RhbCcpLnRleHQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnLmt0X3N1YmhlYWRlcl90b3RhbCcpLmh0bWwoKGt0X3N1YmhlYWRlcl90b3RhbCAtIHNlbGVjdGVkLmxlbmd0aCkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkLm5vdGlmeSh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogKHJlc3VsdC5zdWNjZXNzLm1lc3NhZ2UpID8gX0xBTkdfLmRlbGV0ZWQgKyBcIiFcIiA6IF9MQU5HXy53YXJuaW5nICsgXCIhXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAocmVzdWx0LnN1Y2Nlc3MubWVzc2FnZSkgPyByZXN1bHQuc3VjY2Vzcy5tZXNzYWdlIDogcmVzdWx0LmVycm9yLm1lc3NhZ2VcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogKHJlc3VsdC5zdWNjZXNzLm1lc3NhZ2UpID8gJ3N1Y2Nlc3MnIDogJ3dhcm5pbmcnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiI2t0X2FwcHNfcGVybWlzc2lvbnNfbGlzdF9kYXRhdGFibGVcIikuS1REYXRhdGFibGUoKS5yZWxvYWQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJC5ub3RpZnkoe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6IF9MQU5HXy5kZWxldGVkLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogX0xBTkdfLnlvdXJfc2VsZWN0ZWRfcmVjb3Jkc19oYXZlX25vdF9iZWVuX2RlbGV0ZWRcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2luZm8nXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIH0pLCB0Lm9uKFwiZGF0YXRhYmxlLW9uLWxheW91dC11cGRhdGVkXCIsIGZ1bmN0aW9uKCkge30pXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59KCk7XHJcbktUVXRpbC5yZWFkeShmdW5jdGlvbigpIHtcclxuICAgIEtUQXBwVXNlckxpc3REYXRhdGFibGUuaW5pdCgpXHJcbn0pOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/metronic/js/pages/custom/permissions/page.list.permissions.js\n");

/***/ }),

/***/ 115:
/*!***************************************************************************************!*\
  !*** multi ./resources/metronic/js/pages/custom/permissions/page.list.permissions.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /Applications/MAMP/htdocs/spreadci4/public/admin/themes/metronic/resources/metronic/js/pages/custom/permissions/page.list.permissions.js */"./resources/metronic/js/pages/custom/permissions/page.list.permissions.js");


/***/ })

/******/ });