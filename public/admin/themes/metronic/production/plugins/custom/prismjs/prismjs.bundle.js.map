{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./resources/plugins/custom/prismjs/prismjs.js","webpack:///./node_modules/prismjs/prism.js","webpack:///./node_modules/prismjs/plugins/normalize-whitespace/prism-normalize-whitespace.js","webpack:///./resources/metronic/js/vendors/plugins/prism.init.js","webpack:///(webpack)/buildin/global.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","Prism","_self","lang","uniqueId","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","type","content","alias","Array","isArray","map","replace","toString","slice","objId","obj","clone","deepClone","visited","id","forEach","v","getLanguage","element","test","className","parentElement","match","toLowerCase","currentScript","document","Error","err","src","exec","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","classList","contains","languages","extend","redef","insertBefore","inside","before","insert","root","grammar","ret","token","newToken","old","DFS","this","callback","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","run","elements","apply","querySelectorAll","highlightElement","language","parent","nodeName","code","textContent","insertHighlightedCode","highlightedCode","innerHTML","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","text","tokenize","rest","tokenList","LinkedList","addAfter","head","matchGrammar","startNode","startPos","rematch","patterns","j","length","cause","patternObj","lookbehind","greedy","lookbehindLength","pattern","global","flags","RegExp","source","currentNode","next","pos","tail","reach","str","removeCount","prev","lastIndex","from","index","to","k","matchStr","after","removeFrom","removeRange","wrapped","list","array","node","push","toArray","all","add","callbacks","matchedStr","newNode","count","e","tag","classes","attributes","aliases","join","addEventListener","message","parse","close","script","highlightAutomaticallyCallback","hasAttribute","readyState","defer","window","requestAnimationFrame","setTimeout","WorkerGlobalScope","self","markup","tagName","includedCdataInside","def","html","mathml","svg","xml","ssml","atom","rss","string","css","addInlined","clike","javascript","regex","js","EXTENSIONS","SELECTOR","pre","matches","setAttribute","appendChild","createElement","getAttribute","extension","setLanguageClass","autoloader","loadLanguages","xhr","XMLHttpRequest","open","onreadystatechange","status","responseText","statusText","send","fileHighlight","logged","console","warn","arguments","trim","assign","obj1","obj2","NormalizeWhitespace","defaults","tabLen","res","charCodeAt","setDefaults","normalize","input","settings","methodName","firstChar","toUpperCase","leftTrim","rightTrim","tabsToSpaces","spaces","spacesToTabs","removeTrailing","removeInitialLineFeed","removeIndent","indents","sort","a","b","indent","tabs","breakLines","characters","lines","split","line","len","tl","Normalizer","parentNode","children","childNodes","codeFound","nodeValue","removeChild","KeepMarkup","g","Function"],"mappings":"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","file":"/production/plugins/custom/prismjs/prismjs.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 427);\n","// Prism - is a lightweight, extensible syntax highlighter, built with modern web standards in mind: https://prismjs.com/\r\n\r\nrequire('prismjs/prism.js');\r\nrequire('prismjs/plugins/normalize-whitespace/prism-normalize-whitespace.js');\r\nrequire('../../../metronic/js/vendors/plugins/prism.init.js');\r\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\nvar uniqueId = 0;\n\n\nvar _ = {\n\t/**\n\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t * additional languages or plugins yourself.\n\t *\n\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t *\n\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t * empty Prism object into the global scope before loading the Prism script like this:\n\t *\n\t * ```js\n\t * window.Prism = window.Prism || {};\n\t * Prism.manual = true;\n\t * // add a new <script> to load Prism's script\n\t * ```\n\t *\n\t * @default false\n\t * @type {boolean}\n\t * @memberof Prism\n\t * @public\n\t */\n\tmanual: _self.Prism && _self.Prism.manual,\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t/**\n\t * A namespace for utility methods.\n\t *\n\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t * change or disappear at any time.\n\t *\n\t * @namespace\n\t * @memberof Prism\n\t */\n\tutil: {\n\t\tencode: function encode(tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\treturn tokens.map(encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the name of the type of the given value.\n\t\t *\n\t\t * @param {any} o\n\t\t * @returns {string}\n\t\t * @example\n\t\t * type(null)      === 'Null'\n\t\t * type(undefined) === 'Undefined'\n\t\t * type(123)       === 'Number'\n\t\t * type('foo')     === 'String'\n\t\t * type(true)      === 'Boolean'\n\t\t * type([1, 2])    === 'Array'\n\t\t * type({})        === 'Object'\n\t\t * type(String)    === 'Function'\n\t\t * type(/abc+/)    === 'RegExp'\n\t\t */\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t},\n\n\t\t/**\n\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t *\n\t\t * @param {Object} obj\n\t\t * @returns {number}\n\t\t */\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t/**\n\t\t * Creates a deep clone of the given object.\n\t\t *\n\t\t * The main intended use of this function is to clone language definitions.\n\t\t *\n\t\t * @param {T} o\n\t\t * @param {Record<number, any>} [visited]\n\t\t * @returns {T}\n\t\t * @template T\n\t\t */\n\t\tclone: function deepClone(o, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar clone, id;\n\t\t\tswitch (_.util.type(o)) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = [];\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn o;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t *\n\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t *\n\t\t * @param {Element} element\n\t\t * @returns {string}\n\t\t */\n\t\tgetLanguage: function (element) {\n\t\t\twhile (element && !lang.test(element.className)) {\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\tif (element) {\n\t\t\t\treturn (element.className.match(lang) || [, 'none'])[1].toLowerCase();\n\t\t\t}\n\t\t\treturn 'none';\n\t\t},\n\n\t\t/**\n\t\t * Returns the script element that is currently executing.\n\t\t *\n\t\t * This does __not__ work for line script element.\n\t\t *\n\t\t * @returns {HTMLScriptElement | null}\n\t\t */\n\t\tcurrentScript: function () {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t}\n\n\t\t\t// IE11 workaround\n\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t// this will not work for inline scripts\n\n\t\t\ttry {\n\t\t\t\tthrow new Error();\n\t\t\t} catch (err) {\n\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t// A stack will look like this:\n\t\t\t\t//\n\t\t\t\t// Error\n\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\tif (src) {\n\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns whether a given class is active for `element`.\n\t\t *\n\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t * given class is just the given class with a `no-` prefix.\n\t\t *\n\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t *\n\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t * version of it, the class is considered active.\n\t\t *\n\t\t * @param {Element} element\n\t\t * @param {string} className\n\t\t * @param {boolean} [defaultActivation=false]\n\t\t * @returns {boolean}\n\t\t */\n\t\tisActive: function (element, className, defaultActivation) {\n\t\t\tvar no = 'no-' + className;\n\n\t\t\twhile (element) {\n\t\t\t\tvar classList = element.classList;\n\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\treturn !!defaultActivation;\n\t\t}\n\t},\n\n\t/**\n\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t *\n\t * @namespace\n\t * @memberof Prism\n\t * @public\n\t */\n\tlanguages: {\n\t\t/**\n\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t *\n\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t * will be overwritten at its original position.\n\t\t *\n\t\t * ## Best practices\n\t\t *\n\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t *\n\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t *\n\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t * @param {Grammar} redef The new tokens to append.\n\t\t * @returns {Grammar} The new language created.\n\t\t * @public\n\t\t * @example\n\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t *     // at its original position\n\t\t *     'comment': { ... },\n\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t * });\n\t\t */\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t *\n\t\t * ## Usage\n\t\t *\n\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t * this:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.markup.style = {\n\t\t *     // token\n\t\t * };\n\t\t * ```\n\t\t *\n\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t *     'style': {\n\t\t *         // token\n\t\t *     }\n\t\t * });\n\t\t * ```\n\t\t *\n\t\t * ## Special cases\n\t\t *\n\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t * will be ignored.\n\t\t *\n\t\t * This behavior can be used to insert tokens after `before`:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t *     'comment': Prism.languages.markup.comment,\n\t\t *     // tokens after 'comment'\n\t\t * });\n\t\t * ```\n\t\t *\n\t\t * ## Limitations\n\t\t *\n\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t *\n\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t *\n\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t *\n\t\t * ```js\n\t\t * var oldMarkup = Prism.languages.markup;\n\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t *\n\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t * ```\n\t\t *\n\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t * object to be modified.\n\t\t * @param {string} before The key to insert before.\n\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t * object to be modified.\n\t\t *\n\t\t * Defaults to `Prism.languages`.\n\t\t * @returns {Grammar} The new grammar object.\n\t\t * @public\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\tvar grammar = root[inside];\n\t\t\t/** @type {Grammar} */\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar old = root[inside];\n\t\t\troot[inside] = ret;\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar objId = _.util.objId;\n\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tvar property = o[i],\n\t\t\t\t\t    propertyType = _.util.type(property);\n\n\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tplugins: {},\n\n\t/**\n\t * This is the most high-level function in Prism’s API.\n\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t * each one of them.\n\t *\n\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t *\n\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightAll: function(async, callback) {\n\t\t_.highlightAllUnder(document, async, callback);\n\t},\n\n\t/**\n\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t * {@link Prism.highlightElement} on each one of them.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-highlightall`\n\t * 2. `before-all-elements-highlight`\n\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t *\n\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightAllUnder: function(container, async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tcontainer: container,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run('before-highlightall', env);\n\n\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\tfor (var i = 0, element; element = env.elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\t/**\n\t * Highlights the code inside a single element.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-sanity-check`\n\t * 2. `before-highlight`\n\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t * 4. `before-insert`\n\t * 5. `after-highlight`\n\t * 6. `complete`\n\t *\n\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t * the element's language.\n\t *\n\t * @param {Element} element The element containing the code.\n\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t *\n\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t * asynchronous highlighting to work. You can build your own bundle on the\n\t * [Download page](https://prismjs.com/download.html).\n\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language = _.util.getLanguage(element);\n\t\tvar grammar = _.languages[language];\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\t// Set language on the parent, for styling\n\t\tvar parent = element.parentElement;\n\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t}\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code) {\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (!env.grammar) {\n\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\treturn;\n\t\t}\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t}\n\t},\n\n\t/**\n\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t * and the language definitions to use, and returns a string with the HTML produced.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-tokenize`\n\t * 2. `after-tokenize`\n\t * 3. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string} text A string with the code to be highlighted.\n\t * @param {Grammar} grammar An object containing the tokens to use.\n\t *\n\t * Usually a language definition like `Prism.languages.markup`.\n\t * @param {string} language The name of the language definition passed to `grammar`.\n\t * @returns {string} The highlighted HTML.\n\t * @memberof Prism\n\t * @public\n\t * @example\n\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t */\n\thighlight: function (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\t_.hooks.run('before-tokenize', env);\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t_.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t},\n\n\t/**\n\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t * and the language definitions to use, and returns an array with the tokenized code.\n\t *\n\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t *\n\t * This method could be useful in other contexts as well, as a very crude parser.\n\t *\n\t * @param {string} text A string with the code to be highlighted.\n\t * @param {Grammar} grammar An object containing the tokens to use.\n\t *\n\t * Usually a language definition like `Prism.languages.markup`.\n\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t * @memberof Prism\n\t * @public\n\t * @example\n\t * let code = `var foo = 0;`;\n\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t * tokens.forEach(token => {\n\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t *         console.log(`Found numeric literal: ${token.content}`);\n\t *     }\n\t * });\n\t */\n\ttokenize: function(text, grammar) {\n\t\tvar rest = grammar.rest;\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\tvar tokenList = new LinkedList();\n\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\treturn toArray(tokenList);\n\t},\n\n\t/**\n\t * @namespace\n\t * @memberof Prism\n\t * @public\n\t */\n\thooks: {\n\t\tall: {},\n\n\t\t/**\n\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t *\n\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t *\n\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t *\n\t\t * @param {string} name The name of the hook.\n\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t * @public\n\t\t */\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\t/**\n\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t *\n\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t *\n\t\t * @param {string} name The name of the hook.\n\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t * @public\n\t\t */\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t},\n\n\tToken: Token\n};\n_self.Prism = _;\n\n\n// Typescript note:\n// The following can be used to import the Token type in JSDoc:\n//\n//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n/**\n * Creates a new token.\n *\n * @param {string} type See {@link Token#type type}\n * @param {string | TokenStream} content See {@link Token#content content}\n * @param {string|string[]} [alias] The alias(es) of the token.\n * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n * @class\n * @global\n * @public\n */\nfunction Token(type, content, alias, matchedStr) {\n\t/**\n\t * The type of the token.\n\t *\n\t * This is usually the key of a pattern in a {@link Grammar}.\n\t *\n\t * @type {string}\n\t * @see GrammarToken\n\t * @public\n\t */\n\tthis.type = type;\n\t/**\n\t * The strings or tokens contained by this token.\n\t *\n\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t *\n\t * @type {string | TokenStream}\n\t * @public\n\t */\n\tthis.content = content;\n\t/**\n\t * The alias(es) of the token.\n\t *\n\t * @type {string|string[]}\n\t * @see GrammarToken\n\t * @public\n\t */\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || '').length | 0;\n}\n\n/**\n * A token stream is an array of strings and {@link Token Token} objects.\n *\n * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n * them.\n *\n * 1. No adjacent strings.\n * 2. No empty strings.\n *\n *    The only exception here is the token stream that only contains the empty string and nothing else.\n *\n * @typedef {Array<string | Token>} TokenStream\n * @global\n * @public\n */\n\n/**\n * Converts the given token or token stream to an HTML representation.\n *\n * The following hooks will be run:\n * 1. `wrap`: On each {@link Token}.\n *\n * @param {string | Token | TokenStream} o The token or token stream to be converted.\n * @param {string} language The name of current language.\n * @returns {string} The HTML representation of the token or token stream.\n * @memberof Token\n * @static\n */\nToken.stringify = function stringify(o, language) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\tif (Array.isArray(o)) {\n\t\tvar s = '';\n\t\to.forEach(function (e) {\n\t\t\ts += stringify(e, language);\n\t\t});\n\t\treturn s;\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: stringify(o.content, language),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language\n\t};\n\n\tvar aliases = o.alias;\n\tif (aliases) {\n\t\tif (Array.isArray(aliases)) {\n\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t} else {\n\t\t\tenv.classes.push(aliases);\n\t\t}\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = '';\n\tfor (var name in env.attributes) {\n\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n};\n\n/**\n * @param {string} text\n * @param {LinkedList<string | Token>} tokenList\n * @param {any} grammar\n * @param {LinkedListNode<string | Token>} startNode\n * @param {number} startPos\n * @param {RematchOptions} [rematch]\n * @returns {void}\n * @private\n *\n * @typedef RematchOptions\n * @property {string} cause\n * @property {number} reach\n */\nfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\tfor (var token in grammar) {\n\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar patterns = grammar[token];\n\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar patternObj = patterns[j],\n\t\t\t\tinside = patternObj.inside,\n\t\t\t\tlookbehind = !!patternObj.lookbehind,\n\t\t\t\tgreedy = !!patternObj.greedy,\n\t\t\t\tlookbehindLength = 0,\n\t\t\t\talias = patternObj.alias;\n\n\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t}\n\n\t\t\t/** @type {RegExp} */\n\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t) {\n\n\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\n\t\t\t\tif (greedy && currentNode != tokenList.tail.prev) {\n\t\t\t\t\tpattern.lastIndex = pos;\n\t\t\t\t\tvar match = pattern.exec(text);\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index + (lookbehind && match[1] ? match[1].length : 0);\n\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t}\n\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\tpos = p;\n\n\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\tfor (\n\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\tk = k.next\n\t\t\t\t\t) {\n\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t}\n\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t// replace with the new match\n\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t} else {\n\t\t\t\t\tpattern.lastIndex = 0;\n\n\t\t\t\t\tvar match = pattern.exec(str);\n\t\t\t\t}\n\n\t\t\t\tif (!match) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (lookbehind) {\n\t\t\t\t\tlookbehindLength = match[1] ? match[1].length : 0;\n\t\t\t\t}\n\n\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\tmatchStr = match[0].slice(lookbehindLength),\n\t\t\t\t\tto = from + matchStr.length,\n\t\t\t\t\tbefore = str.slice(0, from),\n\t\t\t\t\tafter = str.slice(to);\n\n\t\t\t\tvar reach = pos + str.length;\n\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\trematch.reach = reach;\n\t\t\t\t}\n\n\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\tif (before) {\n\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\tpos += before.length;\n\t\t\t\t}\n\n\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\tif (after) {\n\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t}\n\n\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t// this can only happen if the current pattern is greedy\n\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, {\n\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\treach: reach\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @typedef LinkedListNode\n * @property {T} value\n * @property {LinkedListNode<T> | null} prev The previous node.\n * @property {LinkedListNode<T> | null} next The next node.\n * @template T\n * @private\n */\n\n/**\n * @template T\n * @private\n */\nfunction LinkedList() {\n\t/** @type {LinkedListNode<T>} */\n\tvar head = { value: null, prev: null, next: null };\n\t/** @type {LinkedListNode<T>} */\n\tvar tail = { value: null, prev: head, next: null };\n\thead.next = tail;\n\n\t/** @type {LinkedListNode<T>} */\n\tthis.head = head;\n\t/** @type {LinkedListNode<T>} */\n\tthis.tail = tail;\n\tthis.length = 0;\n}\n\n/**\n * Adds a new node with the given value to the list.\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {T} value\n * @returns {LinkedListNode<T>} The added node.\n * @template T\n */\nfunction addAfter(list, node, value) {\n\t// assumes that node != list.tail && values.length >= 0\n\tvar next = node.next;\n\n\tvar newNode = { value: value, prev: node, next: next };\n\tnode.next = newNode;\n\tnext.prev = newNode;\n\tlist.length++;\n\n\treturn newNode;\n}\n/**\n * Removes `count` nodes after the given node. The given node will not be removed.\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {number} count\n * @template T\n */\nfunction removeRange(list, node, count) {\n\tvar next = node.next;\n\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\tnext = next.next;\n\t}\n\tnode.next = next;\n\tnext.prev = node;\n\tlist.length -= i;\n}\n/**\n * @param {LinkedList<T>} list\n * @returns {T[]}\n * @template T\n */\nfunction toArray(list) {\n\tvar array = [];\n\tvar node = list.head.next;\n\twhile (node !== list.tail) {\n\t\tarray.push(node.value);\n\t\tnode = node.next;\n\t}\n\treturn array;\n}\n\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _;\n\t}\n\n\tif (!_.disableWorkerMessageHandler) {\n\t\t// In worker\n\t\t_self.addEventListener('message', function (evt) {\n\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\tlang = message.language,\n\t\t\t\tcode = message.code,\n\t\t\t\timmediateClose = message.immediateClose;\n\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\tif (immediateClose) {\n\t\t\t\t_self.close();\n\t\t\t}\n\t\t}, false);\n\t}\n\n\treturn _;\n}\n\n// Get current script and highlight\nvar script = _.util.currentScript();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (script.hasAttribute('data-manual')) {\n\t\t_.manual = true;\n\t}\n}\n\nfunction highlightAutomaticallyCallback() {\n\tif (!_.manual) {\n\t\t_.highlightAll();\n\t}\n}\n\nif (!_.manual) {\n\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t// See https://github.com/PrismJS/prism/issues/2102\n\tvar readyState = document.readyState;\n\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t} else {\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t}\n\t}\n}\n\nreturn _;\n\n})(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n*/\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n*/\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': /<!--[\\s\\S]*?-->/,\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-]+[\\s\\S]*?(?:;|(?=\\s*\\{))/,\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\((?!\\s*\\))\\s*)(?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))+?(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n\t\t'important': /!important\\b/i,\n\t\t'function': /[-a-z0-9]+(?=\\()/i,\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\n\t\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t\t'style-attr': {\n\t\t\t\tpattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'attr-name': {\n\t\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\t\tinside: markup.tag.inside\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talias: 'language-css'\n\t\t\t}\n\t\t}, markup.tag);\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|(?:get|set)(?=\\s*[\\[$\\w\\xA0-\\uFFFF])|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-flags': /[a-z]+$/,\n\t\t\t'regex-delimiter': /^\\/|\\/$/\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\${|}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\tif (typeof self === 'undefined' || !self.Prism || !self.document) {\n\t\treturn;\n\t}\n\n\tvar Prism = window.Prism;\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\tvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n\n\t/**\n\t * Sets the Prism `language-xxxx` or `lang-xxxx` class to the given language.\n\t *\n\t * @param {HTMLElement} element\n\t * @param {string} language\n\t * @returns {void}\n\t */\n\tfunction setLanguageClass(element, language) {\n\t\tvar className = element.className;\n\t\tclassName = className.replace(lang, ' ') + ' language-' + language;\n\t\telement.className = className.replace(/\\s+/g, ' ').trim();\n\t}\n\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tsetLanguageClass(code, language);\n\t\t\tsetLanguageClass(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\txhr.open('GET', src, true);\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tif (xhr.readyState == 4) {\n\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\t// mark as loaded\n\t\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t\t// highlight code\n\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\t\t\t\t\t\tPrism.highlightElement(code);\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// mark as failed\n\t\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\t\tcode.textContent = FAILURE_MESSAGE(xhr.status, xhr.statusText);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcode.textContent = FAILURE_EMPTY_MESSAGE;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr.send(null);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; element = elements[i++];) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t}\n\n})();\n","(function() {\n\nvar assign = Object.assign || function (obj1, obj2) {\n\tfor (var name in obj2) {\n\t\tif (obj2.hasOwnProperty(name))\n\t\t\tobj1[name] = obj2[name];\n\t}\n\treturn obj1;\n}\n\nfunction NormalizeWhitespace(defaults) {\n\tthis.defaults = assign({}, defaults);\n}\n\nfunction toCamelCase(value) {\n\treturn value.replace(/-(\\w)/g, function(match, firstChar) {\n\t\treturn firstChar.toUpperCase();\n\t});\n}\n\nfunction tabLen(str) {\n\tvar res = 0;\n\tfor (var i = 0; i < str.length; ++i) {\n\t\tif (str.charCodeAt(i) == '\\t'.charCodeAt(0))\n\t\t\tres += 3;\n\t}\n\treturn str.length + res;\n}\n\nNormalizeWhitespace.prototype = {\n\tsetDefaults: function (defaults) {\n\t\tthis.defaults = assign(this.defaults, defaults);\n\t},\n\tnormalize: function (input, settings) {\n\t\tsettings = assign(this.defaults, settings);\n\n\t\tfor (var name in settings) {\n\t\t\tvar methodName = toCamelCase(name);\n\t\t\tif (name !== \"normalize\" && methodName !== 'setDefaults' &&\n\t\t\t\t\tsettings[name] && this[methodName]) {\n\t\t\t\tinput = this[methodName].call(this, input, settings[name]);\n\t\t\t}\n\t\t}\n\n\t\treturn input;\n\t},\n\n\t/*\n\t * Normalization methods\n\t */\n\tleftTrim: function (input) {\n\t\treturn input.replace(/^\\s+/, '');\n\t},\n\trightTrim: function (input) {\n\t\treturn input.replace(/\\s+$/, '');\n\t},\n\ttabsToSpaces: function (input, spaces) {\n\t\tspaces = spaces|0 || 4;\n\t\treturn input.replace(/\\t/g, new Array(++spaces).join(' '));\n\t},\n\tspacesToTabs: function (input, spaces) {\n\t\tspaces = spaces|0 || 4;\n\t\treturn input.replace(RegExp(' {' + spaces + '}', 'g'), '\\t');\n\t},\n\tremoveTrailing: function (input) {\n\t\treturn input.replace(/\\s*?$/gm, '');\n\t},\n\t// Support for deprecated plugin remove-initial-line-feed\n\tremoveInitialLineFeed: function (input) {\n\t\treturn input.replace(/^(?:\\r?\\n|\\r)/, '');\n\t},\n\tremoveIndent: function (input) {\n\t\tvar indents = input.match(/^[^\\S\\n\\r]*(?=\\S)/gm);\n\n\t\tif (!indents || !indents[0].length)\n\t\t\treturn input;\n\n\t\tindents.sort(function(a, b){return a.length - b.length; });\n\n\t\tif (!indents[0].length)\n\t\t\treturn input;\n\n\t\treturn input.replace(RegExp('^' + indents[0], 'gm'), '');\n\t},\n\tindent: function (input, tabs) {\n\t\treturn input.replace(/^[^\\S\\n\\r]*(?=\\S)/gm, new Array(++tabs).join('\\t') + '$&');\n\t},\n\tbreakLines: function (input, characters) {\n\t\tcharacters = (characters === true) ? 80 : characters|0 || 80;\n\n\t\tvar lines = input.split('\\n');\n\t\tfor (var i = 0; i < lines.length; ++i) {\n\t\t\tif (tabLen(lines[i]) <= characters)\n\t\t\t\tcontinue;\n\n\t\t\tvar line = lines[i].split(/(\\s+)/g),\n\t\t\t    len = 0;\n\n\t\t\tfor (var j = 0; j < line.length; ++j) {\n\t\t\t\tvar tl = tabLen(line[j]);\n\t\t\t\tlen += tl;\n\t\t\t\tif (len > characters) {\n\t\t\t\t\tline[j] = '\\n' + line[j];\n\t\t\t\t\tlen = tl;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlines[i] = line.join('');\n\t\t}\n\t\treturn lines.join('\\n');\n\t}\n};\n\n// Support node modules\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = NormalizeWhitespace;\n}\n\n// Exit if prism is not loaded\nif (typeof Prism === 'undefined') {\n\treturn;\n}\n\nPrism.plugins.NormalizeWhitespace = new NormalizeWhitespace({\n\t'remove-trailing': true,\n\t'remove-indent': true,\n\t'left-trim': true,\n\t'right-trim': true,\n\t/*'break-lines': 80,\n\t'indent': 2,\n\t'remove-initial-line-feed': false,\n\t'tabs-to-spaces': 4,\n\t'spaces-to-tabs': 4*/\n});\n\nPrism.hooks.add('before-sanity-check', function (env) {\n\tvar Normalizer = Prism.plugins.NormalizeWhitespace;\n\n\t// Check settings\n\tif (env.settings && env.settings['whitespace-normalization'] === false) {\n\t\treturn;\n\t}\n\n\t// Check classes\n\tif (!Prism.util.isActive(env.element, 'whitespace-normalization', true)) {\n\t\treturn;\n\t}\n\n\t// Simple mode if there is no env.element\n\tif ((!env.element || !env.element.parentNode) && env.code) {\n\t\tenv.code = Normalizer.normalize(env.code, env.settings);\n\t\treturn;\n\t}\n\n\t// Normal mode\n\tvar pre = env.element.parentNode;\n\tif (!env.code || !pre || pre.nodeName.toLowerCase() !== 'pre') {\n\t\treturn;\n\t}\n\n\tvar children = pre.childNodes,\n\t    before = '',\n\t    after = '',\n\t    codeFound = false;\n\n\t// Move surrounding whitespace from the <pre> tag into the <code> tag\n\tfor (var i = 0; i < children.length; ++i) {\n\t\tvar node = children[i];\n\n\t\tif (node == env.element) {\n\t\t\tcodeFound = true;\n\t\t} else if (node.nodeName === \"#text\") {\n\t\t\tif (codeFound) {\n\t\t\t\tafter += node.nodeValue;\n\t\t\t} else {\n\t\t\t\tbefore += node.nodeValue;\n\t\t\t}\n\n\t\t\tpre.removeChild(node);\n\t\t\t--i;\n\t\t}\n\t}\n\n\tif (!env.element.children.length || !Prism.plugins.KeepMarkup) {\n\t\tenv.code = before + env.code + after;\n\t\tenv.code = Normalizer.normalize(env.code, env.settings);\n\t} else {\n\t\t// Preserve markup for keep-markup plugin\n\t\tvar html = before + env.element.innerHTML + after;\n\t\tenv.element.innerHTML = Normalizer.normalize(html, env.settings);\n\t\tenv.code = env.element.textContent;\n\t}\n});\n\n}());\n","Prism.plugins.NormalizeWhitespace.setDefaults({\r\n    'remove-trailing': true,\r\n\t'remove-indent': true,\r\n\t'left-trim': true,\r\n\t'right-trim': true\r\n});\r\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}