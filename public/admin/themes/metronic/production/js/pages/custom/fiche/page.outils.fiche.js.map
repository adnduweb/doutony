{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./resources/metronic/js/pages/custom/fiche/page.outils.fiche.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","KTform","init","form","KTUtil","getById","attr","$","passwordMeter","document","getElementById","randomNumber","min","max","Math","floor","random","FormValidation","formValidation","fields","username","validators","notEmpty","message","_LANG_","champs_is_required","firstname","lastname","email","email_is_required","emailAddress","the_value_is_not_address_valid","password","different","password_cannot_be_the_same_as_username","compare","querySelector","pass_confirm","identical","password_not_ecal_pass_confirm","plugins","trigger","Trigger","bootstrap","Bootstrap","submitButton","SubmitButton","passwordStrength","PasswordStrength","field","the_password_is_weak","minimalScore","onValidated","valid","score","style","width","backgroundColor","on","submit","response","error","before","_handleFormUser","jQuery","ready","e","post","baseController","crsftoken","status","val","html","success","click","this","prev","prop","input_phone","errorMsgPhoneFixe","errorMap","iti_phoneFixe","intlTelInput","initialCountry","allowDropdown","geoIpLookup","callback","always","resp","countryCode","country","hiddenInput","utilsScript","utils","resetPhoneFixe","classList","remove","innerHTML","add","addEventListener","trim","isValidNumber","errorCode","getValidationError","countryData","currentMask","replace","inputmask","mask","keepStatic","input_phone_mobile","errorMsgPhoneMobile","iti_phoneMobile","resetPhoneMobile"],"mappings":"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","file":"/production/js/pages/custom/fiche/page.outils.fiche.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 472);\n","// Class Definition\nvar KTform = function() {\n    var _buttonSpinnerClasses = 'spinner spinner-right spinner-white pr-15';\n\n\n    var _handleFormUser = function() {\n\n        var form = KTUtil.getById('kt_apps_fichecompte-personnel_form');\n\n        var formSubmitUrl = KTUtil.attr(form, 'action');\n        var formSubmitButton = $('.kt_form_submit_utilisateurs');\n\n        if (!form) {\n            return;\n        }\n\n        const passwordMeter = document.getElementById('passwordMeter');\n\n        const randomNumber = function(min, max) {\n            return Math.floor(Math.random() * (max - min + 1) + min);\n        };\n\n        FormValidation\n            .formValidation(\n                form, {\n                    fields: {\n                        username: {\n                            validators: {\n                                notEmpty: {\n                                    message: _LANG_.champs_is_required\n                                }\n                            }\n                        },\n                        firstname: {\n                            validators: {\n                                notEmpty: {\n                                    message: _LANG_.champs_is_required\n                                }\n                            }\n                        },\n                        lastname: {\n                            validators: {\n                                notEmpty: {\n                                    message: _LANG_.champs_is_required\n                                }\n                            }\n                        },\n                        email: {\n                            validators: {\n                                notEmpty: {\n                                    message: _LANG_.email_is_required\n                                },\n                                emailAddress: {\n                                    message: _LANG_.the_value_is_not_address_valid\n                                }\n                            }\n                        },\n                        password: {\n                            validators: {\n                                different: {\n                                    message: _LANG_.password_cannot_be_the_same_as_username,\n                                    compare: () => {\n                                        return form.querySelector('[name=\"username\"]').value;\n                                    }\n                                }\n                            }\n                        },\n                        pass_confirm: {\n                            validators: {\n                                identical: {\n                                    compare: function() {\n                                        return form.querySelector('[name=\"password\"]').value;\n                                    },\n                                    message: _LANG_.password_not_ecal_pass_confirm,\n                                }\n                            }\n                        }\n                    },\n                    plugins: {\n                        trigger: new FormValidation.plugins.Trigger(),\n                        bootstrap: new FormValidation.plugins.Bootstrap(),\n                        submitButton: new FormValidation.plugins.SubmitButton(),\n                        passwordStrength: new FormValidation.plugins.PasswordStrength({\n                            field: 'password',\n                            message: _LANG_.the_password_is_weak,\n                            minimalScore: 3,\n                            onValidated: function(valid, message, score) {\n                                switch (score) {\n                                    case 0:\n                                        passwordMeter.style.width = randomNumber(1, 20) + '%';\n                                        passwordMeter.style.backgroundColor = '#ff4136';\n                                        break;\n                                    case 1:\n                                        passwordMeter.style.width = randomNumber(20, 40) + '%';\n                                        passwordMeter.style.backgroundColor = '#ff4136';\n                                        break;\n                                    case 2:\n                                        passwordMeter.style.width = randomNumber(40, 60) + '%';\n                                        passwordMeter.style.backgroundColor = '#ff4136';\n                                        break;\n                                    case 3:\n                                        passwordMeter.style.width = randomNumber(60, 80) + '%';\n                                        passwordMeter.style.backgroundColor = '#ffb700';\n                                        break;\n                                    case 4:\n                                        passwordMeter.style.width = '100%';\n                                        passwordMeter.style.backgroundColor = '#19a974';\n                                        break;\n                                    default:\n                                        break;\n                                }\n                            },\n                        }),\n                    }\n                }\n            )\n            .on('core.form.valid', function() {\n                $(form).submit();\n            })\n            .on('core.form.invalid', function(response) {\n\n                if (response.error == true) {\n                    $(form).before(response.message);\n                }\n            });\n    }\n\n    // Public Functions\n    return {\n        init: function() {\n            _handleFormUser();\n            //_handleFormSignup();\n        }\n    };\n}();\n\n// Class Initialization\njQuery(document).ready(function() {\n    KTform.init();\n});\n\n$(document).on(\"click\", '.generer_mot_passe', function(e) {\n    $.post(baseController + \"/getPassword\", {\n            [crsftoken]: $('meta[name=\"X-CSRF-TOKEN\"]').attr('content'),\n        },\n        function(response, status) {\n            //csrf_hash = response.csrf_token;\n\n            if (response.error == false) {\n                $('.pass_confirm').val('');\n                $('.datapassword').val('');\n                $('#password').html('');\n                $('.datapassword').val(response.success.password);\n                $('.pass_confirm').val(response.success.password);\n                $('#password').html(response.success.password);\n            }\n        });\n});\n\n$('.show-password').click(function() {\n    if ($(this).prev('input').prop('type') == 'password') {\n        //Si c'est un input type password\n        $(this).prev('input').prop('type', 'text');\n        $(this).html('<i class=\"far fa-eye-slash\"></i>');\n    } else {\n        //Sinon\n        $(this).prev('input').prop('type', 'password');\n        $(this).html('<i class=\"far fa-eye\"></i>');\n    }\n});\n\nvar input_phone = document.querySelector(\"#phone\"),\n    errorMsgPhoneFixe = document.querySelector(\".invalid-feedback-phone\");\n//intlTelInput(input_mobile);\n\n// here, the index maps to the error code returned from getValidationError - see readme\nvar errorMap = [\"Invalid number\", \"Invalid country code\", \"Too short\", \"Too long\", \"Invalid number\"];\n\n// initialise plugin\nvar iti_phoneFixe = intlTelInput(input_phone, {\n    initialCountry: \"auto\",\n    allowDropdown: true,\n    geoIpLookup: function(callback) {\n        $.get('https://ipinfo.io', function() {}, \"jsonp\").always(function(resp) {\n            var countryCode = (resp && resp.country) ? resp.country : \"\";\n            callback(countryCode);\n        });\n    },\n    hiddenInput: \"full_phone\",\n    utilsScript: utils\n});\n\nvar resetPhoneFixe = function() {\n    input_phone.classList.remove(\"error\");\n    errorMsgPhoneFixe.innerHTML = \"\";\n    errorMsgPhoneFixe.classList.add(\"hide\");\n    //validMsg.classList.add(\"hide\");\n};\n\n// on blur: validate\ninput_phone.addEventListener('blur', function() {\n    resetPhoneFixe();\n    if (input_phone.value.trim()) {\n        if (!iti_phoneFixe.isValidNumber()) {\n            input_phone.classList.add(\"error\");\n            var errorCode = iti_phoneFixe.getValidationError();\n            errorMsgPhoneFixe.innerHTML = errorMap[errorCode];\n            errorMsgPhoneFixe.classList.remove(\"hide\");\n        }\n    }\n});\ninput_phone.addEventListener(\"countrychange\", function(e, countryData) {\n    //var currentMask = e.currentTarget.placeholder;\n    var currentMask = $(this).attr('placeholder').replace(/[0-9+]/ig, '9');\n    $(this).attr('placeholder', currentMask);\n\n    $(input_phone).inputmask({ mask: currentMask, keepStatic: true });\n});\ninput_phone.addEventListener('change', resetPhoneFixe);\ninput_phone.addEventListener('keyup', resetPhoneFixe);\n\nvar input_phone_mobile = document.querySelector(\"#phone_mobile\"),\n    errorMsgPhoneMobile = document.querySelector(\".invalid-feedback-phone_mobile\");\n\n\n\n\n// initialise plugin\nvar iti_phoneMobile = intlTelInput(input_phone_mobile, {\n    initialCountry: \"auto\",\n    geoIpLookup: function(callback) {\n        $.get('https://ipinfo.io', function() {}, \"jsonp\").always(function(resp) {\n            var countryCode = (resp && resp.country) ? resp.country : \"\";\n            callback(countryCode);\n        });\n    },\n    hiddenInput: \"full_phone_mobile\",\n    utilsScript: utils\n});\n\nvar resetPhoneMobile = function() {\n    input_phone_mobile.classList.remove(\"error\");\n    errorMsgPhoneMobile.innerHTML = \"\";\n    errorMsgPhoneMobile.classList.add(\"hide\");\n    //validMsg.classList.add(\"hide\");\n};\n\n// on blur: validate\ninput_phone_mobile.addEventListener('blur', function() {\n    resetPhoneMobile();\n    if (input_phone_mobile.value.trim()) {\n        if (!iti_phoneMobile.isValidNumber()) {\n            input_phone_mobile.classList.add(\"error\");\n            var errorCode = iti_phoneMobile.getValidationError();\n            errorMsgPhoneMobile.innerHTML = errorMap[errorCode];\n            errorMsgPhoneMobile.classList.remove(\"hide\");\n        }\n    }\n});\ninput_phone_mobile.addEventListener(\"countrychange\", function(e, countryData) {\n    //var currentMask = e.currentTarget.placeholder;\n    var currentMask = $(this).attr('placeholder').replace(/[0-9+]/ig, '9');\n    $(this).attr('placeholder', currentMask);\n\n    $(input_phone_mobile).inputmask({ mask: currentMask, keepStatic: true });\n});\ninput_phone_mobile.addEventListener('change', resetPhoneMobile);\ninput_phone_mobile.addEventListener('keyup', resetPhoneMobile);"],"sourceRoot":""}